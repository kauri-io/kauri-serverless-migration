// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`containers/EditProfileForm should match snapshot when OwnProfile props does not exists 1`] = `
<View__Container>
  <View__StyledUpload
    bg=""
    color="white"
    handleClick={[Function]}
    text="Profile"
  />
  <View__InputsContainers>
    <Input
      fontSize={6}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add your full name"
      value=""
    />
    <Input
      fontSize={3}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add job title"
      value=""
    />
    <Input
      fontSize={1}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add username"
      value=""
    />
    <Input
      fontSize={1}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add Website"
      value=""
    />
    <View__Offset>
      <SocialWebsiteIcon
        brand="twitter"
      />
      <Input
        fontSize={1}
        fontWeight="normal"
        onChange={[Function]}
        placeHolder="Twitter"
        value=""
      />
    </View__Offset>
    <View__Offset>
      <SocialWebsiteIcon
        brand="github"
      />
      <Input
        fontSize={1}
        fontWeight="normal"
        onChange={[Function]}
        placeHolder="Github"
        value=""
      />
    </View__Offset>
    <withApollo(Connect(EmailField))
      email=""
      handleChange={[Function]}
      resendEmailVerification={[MockFunction]}
      status="CREATED"
    />
    <View__Offset
      margin={12}
    >
      <Component
        checked={false}
        disabled={true}
        onChange={[Function]}
      />
    </View__Offset>
  </View__InputsContainers>
</View__Container>
`;

exports[`containers/EditProfileForm should match snapshot when OwnProfile props exists 1`] = `
<View__Container>
  <View__StyledUpload
    bg="test avatar"
    color="white"
    handleClick={[Function]}
    text="Profile"
  />
  <View__InputsContainers>
    <Input
      fontSize={6}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add your full name"
      value="test name"
    />
    <Input
      fontSize={3}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add job title"
      value="test title"
    />
    <Input
      fontSize={1}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add username"
      value="test username"
    />
    <Input
      fontSize={1}
      fontWeight="normal"
      onChange={[Function]}
      placeHolder="Add Website"
      value="test website"
    />
    <View__Offset>
      <SocialWebsiteIcon
        brand="twitter"
      />
      <Input
        fontSize={1}
        fontWeight="normal"
        onChange={[Function]}
        placeHolder="Twitter"
        value="test twitter"
      />
    </View__Offset>
    <View__Offset>
      <SocialWebsiteIcon
        brand="github"
      />
      <Input
        fontSize={1}
        fontWeight="normal"
        onChange={[Function]}
        placeHolder="Github"
        value="test github"
      />
    </View__Offset>
    <withApollo(Connect(EmailField))
      email="email@test.com"
      handleChange={[Function]}
      oldEmail="email@test.com"
      resendEmailVerification={[MockFunction]}
      status="EMAIL_VERIFIED"
    />
    <View__Offset
      margin={12}
    >
      <Component
        checked={false}
        disabled={false}
        onChange={[Function]}
      />
    </View__Offset>
  </View__InputsContainers>
</View__Container>
`;

exports[`containers/EditProfileForm should should match the styling 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "DEFAULT_CARD_WIDTH": 288,
        "MAIN_BODY_WIDTH": 1242,
        "bg": Object {
          "bgPrimary": "#1E2428",
          "bgSecondary": "#1E3D3B",
          "borderTextArea": "#979797",
          "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
          "disabledBackgroundColor": "#D6D6D6",
          "disabledTextColor": "#9B9B9B",
          "divider": "#EBEBEB",
          "errorRedColor": "#C03030",
          "hoverTextColor": "#108E72",
          "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
          "paddingTop": "2.5em",
          "primary": "#0BA986",
          "primaryColor": "#0BA986",
          "primaryDark": "#11856B",
          "primaryTextColor": "#1E2428",
          "secondary": "#11856B",
          "secondaryBlue": "rgb(81, 123, 162, 1)",
          "secondaryBlueDark": "rgb(81, 118, 142, 1)",
          "secondaryColor": "#1E3D3B",
          "secondaryTextColor": "#283035",
          "tertiaryBackgroundColor": "#F7F7F7",
          "textPrimary": "#1E2428",
          "white": "#FFFFFF",
        },
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "breakpoints": Array [
          "500px",
          "52em",
          "1242px",
        ],
        "colors": Object {
          "bgPrimary": "#1E2428",
          "bgSecondary": "#1E3D3B",
          "borderTextArea": "#979797",
          "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
          "disabledBackgroundColor": "#D6D6D6",
          "disabledTextColor": "#9B9B9B",
          "divider": "#EBEBEB",
          "errorRedColor": "#C03030",
          "hoverTextColor": "#108E72",
          "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
          "paddingTop": "2.5em",
          "primary": "#0BA986",
          "primaryColor": "#0BA986",
          "primaryDark": "#11856B",
          "primaryTextColor": "#1E2428",
          "secondary": "#11856B",
          "secondaryBlue": "rgb(81, 123, 162, 1)",
          "secondaryBlueDark": "rgb(81, 118, 142, 1)",
          "secondaryColor": "#1E3D3B",
          "secondaryTextColor": "#283035",
          "tertiaryBackgroundColor": "#F7F7F7",
          "textPrimary": "#1E2428",
          "white": "#FFFFFF",
        },
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "fontSizes": Array [
          11,
          13,
          14,
          16,
          18,
          20,
          22,
          28,
          32,
        ],
        "fontWeight": Array [
          300,
          "normal",
          500,
          700,
        ],
        "hoverTextColor": "#108E72",
        "padContent": "
    max-width: 1242px;
    margin-left: auto;
    margin-right: auto;
    @media (min-width: 1242px) {
      min-width: 1242px;
    }
    @media (max-width: 1242px) {
      min-width: 90%;
    }
  ",
        "padding": "calc((100vw - 1242px) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "space": Array [
          0,
          10,
          15,
          30,
          60,
        ],
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      }
    }
  >
    <MockedProvider
      addTypename={true}
    >
      <ApolloProvider
        client={
          ApolloClient {
            "__operations_cache__": Map {},
            "cache": InMemoryCache {
              "addTypename": true,
              "cacheKeyRoot": KeyTrie {
                "weakness": true,
              },
              "config": Object {
                "addTypename": true,
                "dataIdFromObject": [Function],
                "fragmentMatcher": HeuristicFragmentMatcher {},
                "freezeResults": false,
                "resultCaching": true,
              },
              "data": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "maybeBroadcastWatch": [Function],
              "optimisticData": DepTrackingCache {
                "data": Object {},
                "depend": [Function],
              },
              "silenceBroadcast": false,
              "storeReader": StoreReader {
                "executeSelectionSet": [Function],
                "executeStoreQuery": [Function],
                "executeSubSelectedArray": [Function],
                "freezeResults": false,
              },
              "storeWriter": StoreWriter {},
              "typenameDocumentCache": Map {},
              "watches": Set {},
            },
            "clearStoreCallbacks": Array [],
            "clientAwareness": Object {},
            "defaultOptions": Object {},
            "disableNetworkFetches": false,
            "link": ApolloLink {
              "request": [Function],
            },
            "mutate": [Function],
            "query": [Function],
            "queryDeduplication": true,
            "reFetchObservableQueries": [Function],
            "resetStore": [Function],
            "resetStoreCallbacks": Array [],
            "ssrMode": false,
            "store": DataStore {
              "cache": InMemoryCache {
                "addTypename": true,
                "cacheKeyRoot": KeyTrie {
                  "weakness": true,
                },
                "config": Object {
                  "addTypename": true,
                  "dataIdFromObject": [Function],
                  "fragmentMatcher": HeuristicFragmentMatcher {},
                  "freezeResults": false,
                  "resultCaching": true,
                },
                "data": DepTrackingCache {
                  "data": Object {},
                  "depend": [Function],
                },
                "maybeBroadcastWatch": [Function],
                "optimisticData": DepTrackingCache {
                  "data": Object {},
                  "depend": [Function],
                },
                "silenceBroadcast": false,
                "storeReader": StoreReader {
                  "executeSelectionSet": [Function],
                  "executeStoreQuery": [Function],
                  "executeSubSelectedArray": [Function],
                  "freezeResults": false,
                },
                "storeWriter": StoreWriter {},
                "typenameDocumentCache": Map {},
                "watches": Set {},
              },
            },
            "version": "2.4.13",
            "watchQuery": [Function],
          }
        }
      >
        <EditableHeader
          OwnProfile={
            Object {
              "getMyProfile": null,
            }
          }
          resendEmailVerificationAction={[MockFunction]}
          saveUserDetailsAction={[MockFunction]}
        >
          <View__Container>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "View__Container-sc-1edczmb-3",
                    "isStatic": true,
                    "lastClassName": "kWFhCL",
                    "rules": Array [
                      "display:flex;flex-direction:row;",
                    ],
                  },
                  "displayName": "View__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "View__Container-sc-1edczmb-3",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="View__Container-sc-1edczmb-3 kWFhCL"
              >
                <View__StyledUpload
                  bg=""
                  color="white"
                  handleClick={[Function]}
                  text="Profile"
                >
                  <StyledComponent
                    bg=""
                    color="white"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "View__StyledUpload-sc-1edczmb-1",
                          "isStatic": false,
                          "lastClassName": "jFWtTD",
                          "rules": Array [
                            "margin-right:",
                            [Function],
                            "px;",
                          ],
                        },
                        "displayName": "View__StyledUpload",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "View__StyledUpload-sc-1edczmb-1",
                        "target": [Function],
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    handleClick={[Function]}
                    text="Profile"
                  >
                    <UploadLogoButtonComponent
                      bg=""
                      className="View__StyledUpload-sc-1edczmb-1 jFWtTD"
                      color="white"
                      handleClick={[Function]}
                      text="Profile"
                    >
                      <UploadLogoButton
                        bg=""
                        className="View__StyledUpload-sc-1edczmb-1 jFWtTD"
                        color="white"
                        fontSize={0}
                        height="100px"
                        onClick={[Function]}
                        type="button"
                        width="100px"
                      >
                        <StyledComponent
                          bg=""
                          className="View__StyledUpload-sc-1edczmb-1 jFWtTD"
                          color="white"
                          fontSize={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "UploadLogoButton-t7p33i-0",
                                "isStatic": false,
                                "lastClassName": "ibeuVU",
                                "rules": Array [
                                  "border:1px solid ",
                                  [Function],
                                  ";border-radius:4px;background:",
                                  [Function],
                                  ";background-size:cover;cursor:",
                                  [Function],
                                  ";height:",
                                  [Function],
                                  ";width:",
                                  [Function],
                                  ";padding:0;text-transform:uppercase;opacity:",
                                  [Function],
                                  ";:hover{border:2px solid ",
                                  [Function],
                                  ";}font-weight:",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                  [Function],
                                  ";",
                                ],
                              },
                              "displayName": "UploadLogoButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "UploadLogoButton-t7p33i-0",
                              "target": "button",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          height="100px"
                          onClick={[Function]}
                          type="button"
                          width="100px"
                        >
                          <button
                            className="View__StyledUpload-sc-1edczmb-1 jFWtTD UploadLogoButton-t7p33i-0 ibeuVU"
                            color="white"
                            fontSize={0}
                            height="100px"
                            onClick={[Function]}
                            type="button"
                            width="100px"
                          >
                            <UploadLogoButton__Overlay>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "UploadLogoButton__Overlay-t7p33i-1",
                                      "isStatic": false,
                                      "lastClassName": "hHGfGW",
                                      "rules": Array [
                                        "background:rgba(0,0,0,0.4);display:flex;flex-direction:column;flex:1;align-items:center;justify-content:center;height:100%;>:first-child{height:18px;width:18px;",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "UploadLogoButton__Overlay",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "UploadLogoButton__Overlay-t7p33i-1",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="UploadLogoButton__Overlay-t7p33i-1 hHGfGW"
                                >
                                  <img
                                    src="https://png.icons8.com/color/50/000000/upload.png"
                                  />
                                  Profile
                                </div>
                              </StyledComponent>
                            </UploadLogoButton__Overlay>
                          </button>
                        </StyledComponent>
                      </UploadLogoButton>
                    </UploadLogoButtonComponent>
                  </StyledComponent>
                </View__StyledUpload>
                <View__InputsContainers>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "View__InputsContainers-sc-1edczmb-0",
                          "isStatic": false,
                          "lastClassName": "bAZLfo",
                          "rules": Array [
                            "display:flex;flex:1;flex-direction:column;margin-left:",
                            [Function],
                            "px;justify-content:space-between;height:230px;",
                          ],
                        },
                        "displayName": "View__InputsContainers",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "View__InputsContainers-sc-1edczmb-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="View__InputsContainers-sc-1edczmb-0 bAZLfo"
                    >
                      <Input
                        fontSize={6}
                        fontWeight="normal"
                        onChange={[Function]}
                        placeHolder="Add your full name"
                        value=""
                      >
                        <Input__Wrapper
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Input__Wrapper-sc-100s1kb-2",
                                  "isStatic": false,
                                  "lastClassName": "ekFmoA",
                                  "rules": Array [
                                    "display:flex;position:relative;align-self:auto;",
                                    [Function],
                                    " ",
                                    [Function],
                                    " ",
                                    [Function],
                                  ],
                                },
                                "displayName": "Input__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            textAlign="left"
                          >
                            <div
                              className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                            >
                              <Input__InputComp
                                color="white"
                                fontSize={6}
                                fontWeight="normal"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Add your full name"
                                textAlign="left"
                                value=""
                              >
                                <StyledComponent
                                  color="white"
                                  fontSize={6}
                                  fontWeight="normal"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__InputComp-sc-100s1kb-0",
                                        "isStatic": false,
                                        "lastClassName": "eWmapl",
                                        "rules": Array [
                                          "text-align:",
                                          [Function],
                                          ";font-size:",
                                          [Function],
                                          "px;font-weight:",
                                          [Function],
                                          ";color:",
                                          [Function],
                                          ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                          [Function],
                                          ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                        ],
                                      },
                                      "displayName": "Input__InputComp",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyUp={[Function]}
                                  placeholder="Add your full name"
                                  textAlign="left"
                                  value=""
                                >
                                  <input
                                    className="Input__InputComp-sc-100s1kb-0 ruzah"
                                    color="white"
                                    fontSize={6}
                                    fontWeight="normal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyUp={[Function]}
                                    placeholder="Add your full name"
                                    value=""
                                  />
                                </StyledComponent>
                              </Input__InputComp>
                              <Input__Underline
                                fontSize={6}
                                textAlign="left"
                              >
                                <StyledComponent
                                  fontSize={6}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__Underline-sc-100s1kb-1",
                                        "isStatic": false,
                                        "lastClassName": "fGJtkn",
                                        "rules": Array [
                                          "user-select:none;border-top:2px solid ",
                                          [Function],
                                          ";position:",
                                          [Function],
                                          " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                          [Function],
                                          "px;margin-left:2px;",
                                        ],
                                      },
                                      "displayName": "Input__Underline",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  textAlign="left"
                                >
                                  <span
                                    className="Input__Underline-sc-100s1kb-1 fxgvFF"
                                    fontSize={6}
                                  >
                                    Add your full name
                                  </span>
                                </StyledComponent>
                              </Input__Underline>
                            </div>
                          </StyledComponent>
                        </Input__Wrapper>
                      </Input>
                      <Input
                        fontSize={3}
                        fontWeight="normal"
                        onChange={[Function]}
                        placeHolder="Add job title"
                        value=""
                      >
                        <Input__Wrapper
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Input__Wrapper-sc-100s1kb-2",
                                  "isStatic": false,
                                  "lastClassName": "ekFmoA",
                                  "rules": Array [
                                    "display:flex;position:relative;align-self:auto;",
                                    [Function],
                                    " ",
                                    [Function],
                                    " ",
                                    [Function],
                                  ],
                                },
                                "displayName": "Input__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            textAlign="left"
                          >
                            <div
                              className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                            >
                              <Input__InputComp
                                color="white"
                                fontSize={3}
                                fontWeight="normal"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Add job title"
                                textAlign="left"
                                value=""
                              >
                                <StyledComponent
                                  color="white"
                                  fontSize={3}
                                  fontWeight="normal"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__InputComp-sc-100s1kb-0",
                                        "isStatic": false,
                                        "lastClassName": "eWmapl",
                                        "rules": Array [
                                          "text-align:",
                                          [Function],
                                          ";font-size:",
                                          [Function],
                                          "px;font-weight:",
                                          [Function],
                                          ";color:",
                                          [Function],
                                          ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                          [Function],
                                          ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                        ],
                                      },
                                      "displayName": "Input__InputComp",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyUp={[Function]}
                                  placeholder="Add job title"
                                  textAlign="left"
                                  value=""
                                >
                                  <input
                                    className="Input__InputComp-sc-100s1kb-0 jcnZmI"
                                    color="white"
                                    fontSize={3}
                                    fontWeight="normal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyUp={[Function]}
                                    placeholder="Add job title"
                                    value=""
                                  />
                                </StyledComponent>
                              </Input__InputComp>
                              <Input__Underline
                                fontSize={3}
                                textAlign="left"
                              >
                                <StyledComponent
                                  fontSize={3}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__Underline-sc-100s1kb-1",
                                        "isStatic": false,
                                        "lastClassName": "fGJtkn",
                                        "rules": Array [
                                          "user-select:none;border-top:2px solid ",
                                          [Function],
                                          ";position:",
                                          [Function],
                                          " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                          [Function],
                                          "px;margin-left:2px;",
                                        ],
                                      },
                                      "displayName": "Input__Underline",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  textAlign="left"
                                >
                                  <span
                                    className="Input__Underline-sc-100s1kb-1 bQpxWe"
                                    fontSize={3}
                                  >
                                    Add job title
                                  </span>
                                </StyledComponent>
                              </Input__Underline>
                            </div>
                          </StyledComponent>
                        </Input__Wrapper>
                      </Input>
                      <Input
                        fontSize={1}
                        fontWeight="normal"
                        onChange={[Function]}
                        placeHolder="Add username"
                        value=""
                      >
                        <Input__Wrapper
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Input__Wrapper-sc-100s1kb-2",
                                  "isStatic": false,
                                  "lastClassName": "ekFmoA",
                                  "rules": Array [
                                    "display:flex;position:relative;align-self:auto;",
                                    [Function],
                                    " ",
                                    [Function],
                                    " ",
                                    [Function],
                                  ],
                                },
                                "displayName": "Input__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            textAlign="left"
                          >
                            <div
                              className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                            >
                              <Input__InputComp
                                color="white"
                                fontSize={1}
                                fontWeight="normal"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Add username"
                                textAlign="left"
                                value=""
                              >
                                <StyledComponent
                                  color="white"
                                  fontSize={1}
                                  fontWeight="normal"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__InputComp-sc-100s1kb-0",
                                        "isStatic": false,
                                        "lastClassName": "eWmapl",
                                        "rules": Array [
                                          "text-align:",
                                          [Function],
                                          ";font-size:",
                                          [Function],
                                          "px;font-weight:",
                                          [Function],
                                          ";color:",
                                          [Function],
                                          ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                          [Function],
                                          ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                        ],
                                      },
                                      "displayName": "Input__InputComp",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyUp={[Function]}
                                  placeholder="Add username"
                                  textAlign="left"
                                  value=""
                                >
                                  <input
                                    className="Input__InputComp-sc-100s1kb-0 npwKk"
                                    color="white"
                                    fontSize={1}
                                    fontWeight="normal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyUp={[Function]}
                                    placeholder="Add username"
                                    value=""
                                  />
                                </StyledComponent>
                              </Input__InputComp>
                              <Input__Underline
                                fontSize={1}
                                textAlign="left"
                              >
                                <StyledComponent
                                  fontSize={1}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__Underline-sc-100s1kb-1",
                                        "isStatic": false,
                                        "lastClassName": "fGJtkn",
                                        "rules": Array [
                                          "user-select:none;border-top:2px solid ",
                                          [Function],
                                          ";position:",
                                          [Function],
                                          " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                          [Function],
                                          "px;margin-left:2px;",
                                        ],
                                      },
                                      "displayName": "Input__Underline",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  textAlign="left"
                                >
                                  <span
                                    className="Input__Underline-sc-100s1kb-1 fGJtkn"
                                    fontSize={1}
                                  >
                                    Add username
                                  </span>
                                </StyledComponent>
                              </Input__Underline>
                            </div>
                          </StyledComponent>
                        </Input__Wrapper>
                      </Input>
                      <Input
                        fontSize={1}
                        fontWeight="normal"
                        onChange={[Function]}
                        placeHolder="Add Website"
                        value=""
                      >
                        <Input__Wrapper
                          textAlign="left"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Input__Wrapper-sc-100s1kb-2",
                                  "isStatic": false,
                                  "lastClassName": "ekFmoA",
                                  "rules": Array [
                                    "display:flex;position:relative;align-self:auto;",
                                    [Function],
                                    " ",
                                    [Function],
                                    " ",
                                    [Function],
                                  ],
                                },
                                "displayName": "Input__Wrapper",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            textAlign="left"
                          >
                            <div
                              className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                            >
                              <Input__InputComp
                                color="white"
                                fontSize={1}
                                fontWeight="normal"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Add Website"
                                textAlign="left"
                                value=""
                              >
                                <StyledComponent
                                  color="white"
                                  fontSize={1}
                                  fontWeight="normal"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__InputComp-sc-100s1kb-0",
                                        "isStatic": false,
                                        "lastClassName": "eWmapl",
                                        "rules": Array [
                                          "text-align:",
                                          [Function],
                                          ";font-size:",
                                          [Function],
                                          "px;font-weight:",
                                          [Function],
                                          ";color:",
                                          [Function],
                                          ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                          [Function],
                                          ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                        ],
                                      },
                                      "displayName": "Input__InputComp",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                      "target": "input",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  onKeyUp={[Function]}
                                  placeholder="Add Website"
                                  textAlign="left"
                                  value=""
                                >
                                  <input
                                    className="Input__InputComp-sc-100s1kb-0 npwKk"
                                    color="white"
                                    fontSize={1}
                                    fontWeight="normal"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    onKeyUp={[Function]}
                                    placeholder="Add Website"
                                    value=""
                                  />
                                </StyledComponent>
                              </Input__InputComp>
                              <Input__Underline
                                fontSize={1}
                                textAlign="left"
                              >
                                <StyledComponent
                                  fontSize={1}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__Underline-sc-100s1kb-1",
                                        "isStatic": false,
                                        "lastClassName": "fGJtkn",
                                        "rules": Array [
                                          "user-select:none;border-top:2px solid ",
                                          [Function],
                                          ";position:",
                                          [Function],
                                          " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                          [Function],
                                          "px;margin-left:2px;",
                                        ],
                                      },
                                      "displayName": "Input__Underline",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  textAlign="left"
                                >
                                  <span
                                    className="Input__Underline-sc-100s1kb-1 fGJtkn"
                                    fontSize={1}
                                  >
                                    Add Website
                                  </span>
                                </StyledComponent>
                              </Input__Underline>
                            </div>
                          </StyledComponent>
                        </Input__Wrapper>
                      </Input>
                      <View__Offset>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "View__Offset-sc-1edczmb-2",
                                "isStatic": false,
                                "lastClassName": "kmUKoW",
                                "rules": Array [
                                  "margin-left:-",
                                  [Function],
                                  "px;display:flex;flex-direction:row;& > a{margin-right:",
                                  [Function],
                                  "px;}",
                                ],
                              },
                              "displayName": "View__Offset",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "View__Offset-sc-1edczmb-2",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="View__Offset-sc-1edczmb-2 kZEdTE"
                          >
                            <SocialWebsiteIcon
                              brand="twitter"
                            >
                              <a
                                target="_blank"
                              >
                                <SocialWebsiteIcon__InvertSocialIcon
                                  height={20}
                                  src="https://unpkg.com/simple-icons@latest/icons/twitter.svg"
                                  width={20}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "SocialWebsiteIcon__InvertSocialIcon-sc-1n3fjnh-0",
                                          "isStatic": true,
                                          "lastClassName": "dyAGBL",
                                          "rules": Array [
                                            "filter:invert(100%);",
                                          ],
                                        },
                                        "displayName": "SocialWebsiteIcon__InvertSocialIcon",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "SocialWebsiteIcon__InvertSocialIcon-sc-1n3fjnh-0",
                                        "target": "img",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    height={20}
                                    src="https://unpkg.com/simple-icons@latest/icons/twitter.svg"
                                    width={20}
                                  >
                                    <img
                                      className="SocialWebsiteIcon__InvertSocialIcon-sc-1n3fjnh-0 dyAGBL"
                                      height={20}
                                      src="https://unpkg.com/simple-icons@latest/icons/twitter.svg"
                                      width={20}
                                    />
                                  </StyledComponent>
                                </SocialWebsiteIcon__InvertSocialIcon>
                              </a>
                            </SocialWebsiteIcon>
                            <Input
                              fontSize={1}
                              fontWeight="normal"
                              onChange={[Function]}
                              placeHolder="Twitter"
                              value=""
                            >
                              <Input__Wrapper
                                textAlign="left"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__Wrapper-sc-100s1kb-2",
                                        "isStatic": false,
                                        "lastClassName": "ekFmoA",
                                        "rules": Array [
                                          "display:flex;position:relative;align-self:auto;",
                                          [Function],
                                          " ",
                                          [Function],
                                          " ",
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Input__Wrapper",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  textAlign="left"
                                >
                                  <div
                                    className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                                  >
                                    <Input__InputComp
                                      color="white"
                                      fontSize={1}
                                      fontWeight="normal"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyUp={[Function]}
                                      placeholder="Twitter"
                                      textAlign="left"
                                      value=""
                                    >
                                      <StyledComponent
                                        color="white"
                                        fontSize={1}
                                        fontWeight="normal"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Input__InputComp-sc-100s1kb-0",
                                              "isStatic": false,
                                              "lastClassName": "eWmapl",
                                              "rules": Array [
                                                "text-align:",
                                                [Function],
                                                ";font-size:",
                                                [Function],
                                                "px;font-weight:",
                                                [Function],
                                                ";color:",
                                                [Function],
                                                ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                                [Function],
                                                ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                              ],
                                            },
                                            "displayName": "Input__InputComp",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyUp={[Function]}
                                        placeholder="Twitter"
                                        textAlign="left"
                                        value=""
                                      >
                                        <input
                                          className="Input__InputComp-sc-100s1kb-0 npwKk"
                                          color="white"
                                          fontSize={1}
                                          fontWeight="normal"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyUp={[Function]}
                                          placeholder="Twitter"
                                          value=""
                                        />
                                      </StyledComponent>
                                    </Input__InputComp>
                                    <Input__Underline
                                      fontSize={1}
                                      textAlign="left"
                                    >
                                      <StyledComponent
                                        fontSize={1}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Input__Underline-sc-100s1kb-1",
                                              "isStatic": false,
                                              "lastClassName": "fGJtkn",
                                              "rules": Array [
                                                "user-select:none;border-top:2px solid ",
                                                [Function],
                                                ";position:",
                                                [Function],
                                                " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                                [Function],
                                                "px;margin-left:2px;",
                                              ],
                                            },
                                            "displayName": "Input__Underline",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        textAlign="left"
                                      >
                                        <span
                                          className="Input__Underline-sc-100s1kb-1 fGJtkn"
                                          fontSize={1}
                                        >
                                          Twitter
                                        </span>
                                      </StyledComponent>
                                    </Input__Underline>
                                  </div>
                                </StyledComponent>
                              </Input__Wrapper>
                            </Input>
                          </div>
                        </StyledComponent>
                      </View__Offset>
                      <View__Offset>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "View__Offset-sc-1edczmb-2",
                                "isStatic": false,
                                "lastClassName": "kmUKoW",
                                "rules": Array [
                                  "margin-left:-",
                                  [Function],
                                  "px;display:flex;flex-direction:row;& > a{margin-right:",
                                  [Function],
                                  "px;}",
                                ],
                              },
                              "displayName": "View__Offset",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "View__Offset-sc-1edczmb-2",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="View__Offset-sc-1edczmb-2 kZEdTE"
                          >
                            <SocialWebsiteIcon
                              brand="github"
                            >
                              <a
                                target="_blank"
                              >
                                <SocialWebsiteIcon__InvertSocialIcon
                                  height={20}
                                  src="https://unpkg.com/simple-icons@latest/icons/github.svg"
                                  width={20}
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "SocialWebsiteIcon__InvertSocialIcon-sc-1n3fjnh-0",
                                          "isStatic": true,
                                          "lastClassName": "dyAGBL",
                                          "rules": Array [
                                            "filter:invert(100%);",
                                          ],
                                        },
                                        "displayName": "SocialWebsiteIcon__InvertSocialIcon",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "SocialWebsiteIcon__InvertSocialIcon-sc-1n3fjnh-0",
                                        "target": "img",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    height={20}
                                    src="https://unpkg.com/simple-icons@latest/icons/github.svg"
                                    width={20}
                                  >
                                    <img
                                      className="SocialWebsiteIcon__InvertSocialIcon-sc-1n3fjnh-0 dyAGBL"
                                      height={20}
                                      src="https://unpkg.com/simple-icons@latest/icons/github.svg"
                                      width={20}
                                    />
                                  </StyledComponent>
                                </SocialWebsiteIcon__InvertSocialIcon>
                              </a>
                            </SocialWebsiteIcon>
                            <Input
                              fontSize={1}
                              fontWeight="normal"
                              onChange={[Function]}
                              placeHolder="Github"
                              value=""
                            >
                              <Input__Wrapper
                                textAlign="left"
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Input__Wrapper-sc-100s1kb-2",
                                        "isStatic": false,
                                        "lastClassName": "ekFmoA",
                                        "rules": Array [
                                          "display:flex;position:relative;align-self:auto;",
                                          [Function],
                                          " ",
                                          [Function],
                                          " ",
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Input__Wrapper",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  textAlign="left"
                                >
                                  <div
                                    className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                                  >
                                    <Input__InputComp
                                      color="white"
                                      fontSize={1}
                                      fontWeight="normal"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      onKeyUp={[Function]}
                                      placeholder="Github"
                                      textAlign="left"
                                      value=""
                                    >
                                      <StyledComponent
                                        color="white"
                                        fontSize={1}
                                        fontWeight="normal"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Input__InputComp-sc-100s1kb-0",
                                              "isStatic": false,
                                              "lastClassName": "eWmapl",
                                              "rules": Array [
                                                "text-align:",
                                                [Function],
                                                ";font-size:",
                                                [Function],
                                                "px;font-weight:",
                                                [Function],
                                                ";color:",
                                                [Function],
                                                ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                                [Function],
                                                ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                              ],
                                            },
                                            "displayName": "Input__InputComp",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        onKeyUp={[Function]}
                                        placeholder="Github"
                                        textAlign="left"
                                        value=""
                                      >
                                        <input
                                          className="Input__InputComp-sc-100s1kb-0 npwKk"
                                          color="white"
                                          fontSize={1}
                                          fontWeight="normal"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          onKeyUp={[Function]}
                                          placeholder="Github"
                                          value=""
                                        />
                                      </StyledComponent>
                                    </Input__InputComp>
                                    <Input__Underline
                                      fontSize={1}
                                      textAlign="left"
                                    >
                                      <StyledComponent
                                        fontSize={1}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Input__Underline-sc-100s1kb-1",
                                              "isStatic": false,
                                              "lastClassName": "fGJtkn",
                                              "rules": Array [
                                                "user-select:none;border-top:2px solid ",
                                                [Function],
                                                ";position:",
                                                [Function],
                                                " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                                [Function],
                                                "px;margin-left:2px;",
                                              ],
                                            },
                                            "displayName": "Input__Underline",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        textAlign="left"
                                      >
                                        <span
                                          className="Input__Underline-sc-100s1kb-1 fGJtkn"
                                          fontSize={1}
                                        >
                                          Github
                                        </span>
                                      </StyledComponent>
                                    </Input__Underline>
                                  </div>
                                </StyledComponent>
                              </Input__Wrapper>
                            </Input>
                          </div>
                        </StyledComponent>
                      </View__Offset>
                      <withApollo(Connect(EmailField))
                        email=""
                        handleChange={[Function]}
                        resendEmailVerification={[MockFunction]}
                        status="CREATED"
                      >
                        <ApolloConsumer>
                          <Connect(EmailField)
                            client={
                              ApolloClient {
                                "__operations_cache__": Map {},
                                "cache": InMemoryCache {
                                  "addTypename": true,
                                  "cacheKeyRoot": KeyTrie {
                                    "weakness": true,
                                  },
                                  "config": Object {
                                    "addTypename": true,
                                    "dataIdFromObject": [Function],
                                    "fragmentMatcher": HeuristicFragmentMatcher {},
                                    "freezeResults": false,
                                    "resultCaching": true,
                                  },
                                  "data": DepTrackingCache {
                                    "data": Object {},
                                    "depend": [Function],
                                  },
                                  "maybeBroadcastWatch": [Function],
                                  "optimisticData": DepTrackingCache {
                                    "data": Object {},
                                    "depend": [Function],
                                  },
                                  "silenceBroadcast": false,
                                  "storeReader": StoreReader {
                                    "executeSelectionSet": [Function],
                                    "executeStoreQuery": [Function],
                                    "executeSubSelectedArray": [Function],
                                    "freezeResults": false,
                                  },
                                  "storeWriter": StoreWriter {},
                                  "typenameDocumentCache": Map {},
                                  "watches": Set {},
                                },
                                "clearStoreCallbacks": Array [],
                                "clientAwareness": Object {},
                                "defaultOptions": Object {},
                                "disableNetworkFetches": false,
                                "link": ApolloLink {
                                  "request": [Function],
                                },
                                "mutate": [Function],
                                "query": [Function],
                                "queryDeduplication": true,
                                "reFetchObservableQueries": [Function],
                                "resetStore": [Function],
                                "resetStoreCallbacks": Array [],
                                "ssrMode": false,
                                "store": DataStore {
                                  "cache": InMemoryCache {
                                    "addTypename": true,
                                    "cacheKeyRoot": KeyTrie {
                                      "weakness": true,
                                    },
                                    "config": Object {
                                      "addTypename": true,
                                      "dataIdFromObject": [Function],
                                      "fragmentMatcher": HeuristicFragmentMatcher {},
                                      "freezeResults": false,
                                      "resultCaching": true,
                                    },
                                    "data": DepTrackingCache {
                                      "data": Object {},
                                      "depend": [Function],
                                    },
                                    "maybeBroadcastWatch": [Function],
                                    "optimisticData": DepTrackingCache {
                                      "data": Object {},
                                      "depend": [Function],
                                    },
                                    "silenceBroadcast": false,
                                    "storeReader": StoreReader {
                                      "executeSelectionSet": [Function],
                                      "executeStoreQuery": [Function],
                                      "executeSubSelectedArray": [Function],
                                      "freezeResults": false,
                                    },
                                    "storeWriter": StoreWriter {},
                                    "typenameDocumentCache": Map {},
                                    "watches": Set {},
                                  },
                                },
                                "version": "2.4.13",
                                "watchQuery": [Function],
                              }
                            }
                            email=""
                            handleChange={[Function]}
                            resendEmailVerification={[MockFunction]}
                            status="CREATED"
                          >
                            <EmailField
                              client={
                                ApolloClient {
                                  "__operations_cache__": Map {},
                                  "cache": InMemoryCache {
                                    "addTypename": true,
                                    "cacheKeyRoot": KeyTrie {
                                      "weakness": true,
                                    },
                                    "config": Object {
                                      "addTypename": true,
                                      "dataIdFromObject": [Function],
                                      "fragmentMatcher": HeuristicFragmentMatcher {},
                                      "freezeResults": false,
                                      "resultCaching": true,
                                    },
                                    "data": DepTrackingCache {
                                      "data": Object {},
                                      "depend": [Function],
                                    },
                                    "maybeBroadcastWatch": [Function],
                                    "optimisticData": DepTrackingCache {
                                      "data": Object {},
                                      "depend": [Function],
                                    },
                                    "silenceBroadcast": false,
                                    "storeReader": StoreReader {
                                      "executeSelectionSet": [Function],
                                      "executeStoreQuery": [Function],
                                      "executeSubSelectedArray": [Function],
                                      "freezeResults": false,
                                    },
                                    "storeWriter": StoreWriter {},
                                    "typenameDocumentCache": Map {},
                                    "watches": Set {},
                                  },
                                  "clearStoreCallbacks": Array [],
                                  "clientAwareness": Object {},
                                  "defaultOptions": Object {},
                                  "disableNetworkFetches": false,
                                  "link": ApolloLink {
                                    "request": [Function],
                                  },
                                  "mutate": [Function],
                                  "query": [Function],
                                  "queryDeduplication": true,
                                  "reFetchObservableQueries": [Function],
                                  "resetStore": [Function],
                                  "resetStoreCallbacks": Array [],
                                  "ssrMode": false,
                                  "store": DataStore {
                                    "cache": InMemoryCache {
                                      "addTypename": true,
                                      "cacheKeyRoot": KeyTrie {
                                        "weakness": true,
                                      },
                                      "config": Object {
                                        "addTypename": true,
                                        "dataIdFromObject": [Function],
                                        "fragmentMatcher": HeuristicFragmentMatcher {},
                                        "freezeResults": false,
                                        "resultCaching": true,
                                      },
                                      "data": DepTrackingCache {
                                        "data": Object {},
                                        "depend": [Function],
                                      },
                                      "maybeBroadcastWatch": [Function],
                                      "optimisticData": DepTrackingCache {
                                        "data": Object {},
                                        "depend": [Function],
                                      },
                                      "silenceBroadcast": false,
                                      "storeReader": StoreReader {
                                        "executeSelectionSet": [Function],
                                        "executeStoreQuery": [Function],
                                        "executeSubSelectedArray": [Function],
                                        "freezeResults": false,
                                      },
                                      "storeWriter": StoreWriter {},
                                      "typenameDocumentCache": Map {},
                                      "watches": Set {},
                                    },
                                  },
                                  "version": "2.4.13",
                                  "watchQuery": [Function],
                                }
                              }
                              email=""
                              handleChange={[Function]}
                              resendEmailVerification={[MockFunction]}
                              status="CREATED"
                            >
                              <EmailField__Container>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "EmailField__Container-sc-1iup53b-1",
                                        "isStatic": false,
                                        "lastClassName": "kaDpag",
                                        "rules": Array [
                                          "position:relative;display:flex;flex-direction:row;align-items:center;",
                                          [Function],
                                          " > .tooltip-body{margin-top:5px;}",
                                        ],
                                      },
                                      "displayName": "EmailField__Container",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "EmailField__Container-sc-1iup53b-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="EmailField__Container-sc-1iup53b-1 kaDpag"
                                  >
                                    <Input
                                      fontSize={1}
                                      fontWeight={400}
                                      onChange={[Function]}
                                      placeHolder="Add Email"
                                      value=""
                                    >
                                      <Input__Wrapper
                                        textAlign="left"
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Input__Wrapper-sc-100s1kb-2",
                                                "isStatic": false,
                                                "lastClassName": "ekFmoA",
                                                "rules": Array [
                                                  "display:flex;position:relative;align-self:auto;",
                                                  [Function],
                                                  " ",
                                                  [Function],
                                                  " ",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Input__Wrapper",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Input__Wrapper-sc-100s1kb-2",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          textAlign="left"
                                        >
                                          <div
                                            className="Input__Wrapper-sc-100s1kb-2 ekFmoA"
                                          >
                                            <Input__InputComp
                                              color="white"
                                              fontSize={1}
                                              fontWeight={400}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              onKeyUp={[Function]}
                                              placeholder="Add Email"
                                              textAlign="left"
                                              value=""
                                            >
                                              <StyledComponent
                                                color="white"
                                                fontSize={1}
                                                fontWeight={400}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Input__InputComp-sc-100s1kb-0",
                                                      "isStatic": false,
                                                      "lastClassName": "eWmapl",
                                                      "rules": Array [
                                                        "text-align:",
                                                        [Function],
                                                        ";font-size:",
                                                        [Function],
                                                        "px;font-weight:",
                                                        [Function],
                                                        ";color:",
                                                        [Function],
                                                        ";background:transparent;width:100%;outline:none;border:none;::-webkit-input-placeholder{color:",
                                                        [Function],
                                                        ";}:focus::-webkit-input-placeholder{text-indent:-999px;}",
                                                      ],
                                                    },
                                                    "displayName": "Input__InputComp",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Input__InputComp-sc-100s1kb-0",
                                                    "target": "input",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                onKeyUp={[Function]}
                                                placeholder="Add Email"
                                                textAlign="left"
                                                value=""
                                              >
                                                <input
                                                  className="Input__InputComp-sc-100s1kb-0 eWmapl"
                                                  color="white"
                                                  fontSize={1}
                                                  fontWeight={400}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyUp={[Function]}
                                                  placeholder="Add Email"
                                                  value=""
                                                />
                                              </StyledComponent>
                                            </Input__InputComp>
                                            <Input__Underline
                                              fontSize={1}
                                              textAlign="left"
                                            >
                                              <StyledComponent
                                                fontSize={1}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Input__Underline-sc-100s1kb-1",
                                                      "isStatic": false,
                                                      "lastClassName": "fGJtkn",
                                                      "rules": Array [
                                                        "user-select:none;border-top:2px solid ",
                                                        [Function],
                                                        ";position:",
                                                        [Function],
                                                        " left:0;bottom:0;max-width:100%;height:0px;color:transparent;overflow:hidden;font-size:",
                                                        [Function],
                                                        "px;margin-left:2px;",
                                                      ],
                                                    },
                                                    "displayName": "Input__Underline",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Input__Underline-sc-100s1kb-1",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                textAlign="left"
                                              >
                                                <span
                                                  className="Input__Underline-sc-100s1kb-1 fGJtkn"
                                                  fontSize={1}
                                                >
                                                  Add Email
                                                </span>
                                              </StyledComponent>
                                            </Input__Underline>
                                          </div>
                                        </StyledComponent>
                                      </Input__Wrapper>
                                    </Input>
                                  </div>
                                </StyledComponent>
                              </EmailField__Container>
                            </EmailField>
                          </Connect(EmailField)>
                        </ApolloConsumer>
                      </withApollo(Connect(EmailField))>
                      <View__Offset
                        margin={12}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "View__Offset-sc-1edczmb-2",
                                "isStatic": false,
                                "lastClassName": "kmUKoW",
                                "rules": Array [
                                  "margin-left:-",
                                  [Function],
                                  "px;display:flex;flex-direction:row;& > a{margin-right:",
                                  [Function],
                                  "px;}",
                                ],
                              },
                              "displayName": "View__Offset",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "View__Offset-sc-1edczmb-2",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          margin={12}
                        >
                          <div
                            className="View__Offset-sc-1edczmb-2 kmUKoW"
                          >
                            <Component
                              checked={false}
                              disabled={true}
                              onChange={[Function]}
                            >
                              <EmailCheckbox__ReferenceContainer>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "EmailCheckbox__ReferenceContainer-yhdhs2-2",
                                        "isStatic": true,
                                        "lastClassName": "jPMtkP",
                                        "rules": Array [
                                          "display:flex;width:70px;",
                                        ],
                                      },
                                      "displayName": "EmailCheckbox__ReferenceContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "EmailCheckbox__ReferenceContainer-yhdhs2-2",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="EmailCheckbox__ReferenceContainer-yhdhs2-2 jPMtkP"
                                  >
                                    <Tooltip
                                      animateFill={true}
                                      animation="shift"
                                      arrow={false}
                                      arrowSize="regular"
                                      className=""
                                      delay={0}
                                      disabled={false}
                                      distance={10}
                                      duration={375}
                                      followCursor={false}
                                      hideDelay={0}
                                      hideDuration={375}
                                      hideOnClick={true}
                                      html={<Content />}
                                      inertia={false}
                                      interactive={false}
                                      interactiveBorder={2}
                                      multiple={false}
                                      offset={0}
                                      onHidden={[Function]}
                                      onHide={[Function]}
                                      onRequestClose={[Function]}
                                      onShow={[Function]}
                                      onShown={[Function]}
                                      popperOptions={Object {}}
                                      position="top"
                                      size="regular"
                                      sticky={false}
                                      stickyDuration={200}
                                      style={Object {}}
                                      theme="dark"
                                      touchHold={false}
                                      trigger="mouseenter"
                                      unmountHTMLWhenHide={true}
                                    >
                                      <div
                                        className=""
                                        style={
                                          Object {
                                            "display": "inline",
                                          }
                                        }
                                      >
                                        <Component
                                          checked={false}
                                          disabled={true}
                                          label="newsletter"
                                          onChange={[Function]}
                                        >
                                          <Checkbox__Styled
                                            disabled={true}
                                            onClick={[Function]}
                                          >
                                            <StyledComponent
                                              disabled={true}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "Checkbox__Styled-nz5nsn-0",
                                                    "isStatic": false,
                                                    "lastClassName": "djKjrV",
                                                    "rules": Array [
                                                      "display:flex;cursor:",
                                                      [Function],
                                                      ";> input{opacity:0;}> input + label{position:relative;padding-left:25px;cursor:",
                                                      [Function],
                                                      ";color:white;text-transform:uppercase;font-size:11px;font-weight:700;&:before{content:'';position:absolute;left:0;top:0;width:17px;height:17px;border:1px solid ",
                                                      [Function],
                                                      ";background:transparent;border-radius:4px;}&:after{content:url('/static/images/checked.svg');position:absolute;top:-4px;left:4px;font-size:16px;color:white;transition:all 0.2s;}}> input:not(:checked) + label{&:after{opacity:0;transform:scale(0);}}> input:disabled:not(:checked) + label{&:before{background-color:transparent;}}> input:disabled:checked + label{&:after{opacity:0.3;}}> input:disabled + label{opacity:0.3;}> input:checked + label{&:after{opacity:1;transform:scale(1);}}> input:checked:focus + label,input:not(:checked):focus + label{&:before{border:1px dotted blue;border-radius:4px;}}",
                                                    ],
                                                  },
                                                  "displayName": "Checkbox__Styled",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "Checkbox__Styled-nz5nsn-0",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              onClick={[Function]}
                                            >
                                              <div
                                                className="Checkbox__Styled-nz5nsn-0 djKjrV"
                                                disabled={true}
                                                onClick={[Function]}
                                              >
                                                <input
                                                  defaultChecked={false}
                                                  disabled={true}
                                                  type="checkbox"
                                                />
                                                <label>
                                                  newsletter
                                                </label>
                                              </div>
                                            </StyledComponent>
                                          </Checkbox__Styled>
                                        </Component>
                                      </div>
                                    </Tooltip>
                                  </div>
                                </StyledComponent>
                              </EmailCheckbox__ReferenceContainer>
                            </Component>
                          </div>
                        </StyledComponent>
                      </View__Offset>
                    </div>
                  </StyledComponent>
                </View__InputsContainers>
              </div>
            </StyledComponent>
          </View__Container>
        </EditableHeader>
      </ApolloProvider>
    </MockedProvider>
  </ThemeProvider>
</Provider>
`;
