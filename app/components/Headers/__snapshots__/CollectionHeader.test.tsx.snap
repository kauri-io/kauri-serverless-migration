// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/CollectionHeader should match snapshot 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "only": [Function],
        "up": [Function],
        "values": Object {
          "lg": 1280,
          "md": 960,
          "sm": 600,
          "xl": 1920,
          "xs": 0,
        },
        "width": [Function],
      },
      "direction": "ltr",
      "mixins": Object {
        "gutters": [Function],
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "overrides": Object {
        "MuiButton": Object {
          "contained": Object {
            "&&:disabled": Object {
              "backgroundColor": "#e0e0e0",
            },
          },
        },
      },
      "palette": Object {
        "action": Object {
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "hover": "rgba(0, 0, 0, 0.08)",
          "hoverOpacity": 0.08,
          "selected": "rgba(0, 0, 0, 0.14)",
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#f5f5f5",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#1E2428",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#d32f2f",
          "light": "#e57373",
          "main": "#f44336",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#d5d5d5",
          "A200": "#aaaaaa",
          "A400": "#303030",
          "A700": "#616161",
        },
        "primary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "rgb(7, 118, 93)",
          "light": "rgb(59, 186, 158)",
          "main": "#0BA986",
        },
        "secondary": Object {
          "contrastText": "rgba(0, 0, 0, 0.87)",
          "dark": "rgb(178, 178, 178)",
          "light": "rgb(255, 255, 255)",
          "main": "#ffffff",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "hint": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.54)",
        },
        "tonalOffset": 0.2,
        "type": "light",
      },
      "props": Object {},
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.04,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.17,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.33,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "round": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "DEFAULT_CARD_WIDTH": 288,
        "MAIN_BODY_WIDTH": 1272,
        "bg": Object {
          "bgPrimary": "#1E2428",
          "bgSecondary": "#1E3D3B",
          "borderTextArea": "#979797",
          "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
          "disabledBackgroundColor": "#D6D6D6",
          "disabledTextColor": "#9B9B9B",
          "divider": "#EBEBEB",
          "errorRedColor": "#C03030",
          "hoverTextColor": "#108E72",
          "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
          "paddingTop": "2.5em",
          "primary": "#0BA986",
          "primaryColor": "#0BA986",
          "primaryDark": "#11856B",
          "primaryTextColor": "#1E2428",
          "secondary": "#11856B",
          "secondaryBlue": "rgb(81, 123, 162, 1)",
          "secondaryBlueDark": "rgb(81, 118, 142, 1)",
          "secondaryColor": "#1E3D3B",
          "secondaryTextColor": "#283035",
          "tertiaryBackgroundColor": "#F7F7F7",
          "textPrimary": "#1E2428",
          "white": "#FFFFFF",
        },
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "breakpoints": Array [
          "500px",
          "52em",
          "1272px",
        ],
        "colors": Object {
          "bgPrimary": "#1E2428",
          "bgSecondary": "#1E3D3B",
          "borderTextArea": "#979797",
          "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
          "disabledBackgroundColor": "#D6D6D6",
          "disabledTextColor": "#9B9B9B",
          "divider": "#EBEBEB",
          "errorRedColor": "#C03030",
          "hoverTextColor": "#108E72",
          "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
          "paddingTop": "2.5em",
          "primary": "#0BA986",
          "primaryColor": "#0BA986",
          "primaryDark": "#11856B",
          "primaryTextColor": "#1E2428",
          "secondary": "#11856B",
          "secondaryBlue": "rgb(81, 123, 162, 1)",
          "secondaryBlueDark": "rgb(81, 118, 142, 1)",
          "secondaryColor": "#1E3D3B",
          "secondaryTextColor": "#283035",
          "tertiaryBackgroundColor": "#F7F7F7",
          "textPrimary": "#1E2428",
          "white": "#FFFFFF",
        },
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "fontSizes": Array [
          11,
          13,
          14,
          16,
          18,
          20,
          22,
          28,
          32,
        ],
        "fontWeight": Array [
          300,
          "normal",
          500,
          700,
        ],
        "hoverTextColor": "#108E72",
        "padContent": "
    max-width: 1272px;
    margin-left: auto;
    margin-right: auto;
    @media (min-width: 1272px) {
      min-width: 1272px;
    }
    @media (max-width: 1272px) {
      min-width: 90%;
    }
  ",
        "padding": "calc((100vw - 1272px) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "space": Array [
          0,
          10,
          15,
          30,
          60,
        ],
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      }
    }
  >
    <Container
      articleCount={2}
      collectionCount={5}
      description="test description"
      id="123"
      imageURL="Image URL"
      isBookmarked={true}
      isLoggedIn={false}
      isMemberOfCommunityOwner={false}
      linkComponent={[MockFunction]}
      name="test collection"
      openModalAction={[MockFunction]}
      ownerId="345"
      routeChangeAction={[MockFunction]}
      tags={
        Array [
          "test",
          "jest",
        ]
      }
      updated="2019-01-01"
      url="test url"
      userAvatar="avatar url"
      userId="678"
      username="test username"
    >
      <CollectionHeader__CollectionHeaderSection>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "CollectionHeader__CollectionHeaderSection-sc-5lmo96-0",
                "isStatic": false,
                "lastClassName": "jjWwVr",
                "rules": Array [
                  "display:flex;width:100%;flex-direction:row;z-index:1;padding:100px ",
                  [Function],
                  " 24px;@media (max-width:500px){flex-direction:column;}",
                ],
              },
              "displayName": "CollectionHeader__CollectionHeaderSection",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "CollectionHeader__CollectionHeaderSection-sc-5lmo96-0",
              "target": "section",
              "toString": [Function],
              "usesTheme": true,
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <section
            className="CollectionHeader__CollectionHeaderSection-sc-5lmo96-0 jjWwVr"
          >
            <CollectionHeader__LeftSide
              tags={
                Array [
                  "test",
                  "jest",
                ]
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "CollectionHeader__LeftSide-sc-5lmo96-1",
                      "isStatic": false,
                      "lastClassName": "kgppdN",
                      "rules": Array [
                        "display:flex;flex:3;flex-direction:column;color:white;>:nth-child(2){margin:8px 0;}>:nth-last-child(2){margin-bottom:",
                        [Function],
                        "px;}>:last-child{margin-top:",
                        [Function],
                        "px;}@media (max-width:500px){padding:",
                        [Function],
                        "px;}@media (min-width:500px){padding:",
                        [Function],
                        "px;}",
                      ],
                    },
                    "displayName": "CollectionHeader__LeftSide",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "CollectionHeader__LeftSide-sc-5lmo96-1",
                    "target": "div",
                    "toString": [Function],
                    "usesTheme": true,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                tags={
                  Array [
                    "test",
                    "jest",
                  ]
                }
              >
                <div
                  className="CollectionHeader__LeftSide-sc-5lmo96-1 kgppdN"
                >
                  <WithStyles(ForwardRef(Typography))
                    color="secondary"
                    variant="button"
                  >
                    <ForwardRef(Typography)
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      color="secondary"
                      variant="button"
                    >
                      <span
                        className="MuiTypography-root MuiTypography-button MuiTypography-colorSecondary"
                      >
                        Collection Updated 
                        a year ago
                      </span>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <WithStyles(ForwardRef(Typography))
                    color="secondary"
                    component="h1"
                    variant="h4"
                  >
                    <ForwardRef(Typography)
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      color="secondary"
                      component="h1"
                      variant="h4"
                    >
                      <h1
                        className="MuiTypography-root MuiTypography-h4 MuiTypography-colorSecondary"
                      >
                        test collection
                      </h1>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <WithStyles(ForwardRef(Typography))
                    color="secondary"
                  >
                    <ForwardRef(Typography)
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      color="secondary"
                    >
                      <p
                        className="MuiTypography-root MuiTypography-body1 MuiTypography-colorSecondary"
                      >
                        test description
                      </p>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <TagList
                    color="white"
                    maxTags={5}
                    routeChangeAction={[MockFunction]}
                    tags={
                      Array [
                        "test",
                        "jest",
                      ]
                    }
                  >
                    <TagList__Container>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "TagList__Container-ipfhd9-0",
                              "isStatic": false,
                              "lastClassName": "ihYPdv",
                              "rules": Array [
                                "display:flex;margin:",
                                "10",
                                "px 0 0 0;flex-direction:",
                                [Function],
                                ";flex-wrap:wrap;justify-content:",
                                [Function],
                                ";",
                              ],
                            },
                            "displayName": "TagList__Container",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "TagList__Container-ipfhd9-0",
                            "target": "div",
                            "toString": [Function],
                            "usesTheme": false,
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <div
                          className="TagList__Container-ipfhd9-0 ihYPdv"
                        >
                          <TagList__StyledTag
                            color="white"
                            hiddenTags={false}
                            key="0"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              color="white"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "TagList__StyledTag-ipfhd9-1",
                                    "isStatic": false,
                                    "lastClassName": "kEVsZi",
                                    "rules": Array [
                                      "cursor:pointer;transition:0.3s;color:",
                                      [Function],
                                      ";&:not(:last-child):after{content:'•';color:",
                                      [Function],
                                      ";margin:",
                                      "5",
                                      "px;font-weight:",
                                      "700",
                                      ";}&:hover{color:",
                                      "#0BA986",
                                      ";}",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "TagList__StyledTag",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "TagList__StyledTag-ipfhd9-1",
                                  "target": "div",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              hiddenTags={false}
                              onClick={[Function]}
                            >
                              <div
                                className="TagList__StyledTag-ipfhd9-1 kEVsZi"
                                color="white"
                                onClick={[Function]}
                              >
                                test
                              </div>
                            </StyledComponent>
                          </TagList__StyledTag>
                          <TagList__StyledTag
                            color="white"
                            hiddenTags={false}
                            key="1"
                            onClick={[Function]}
                          >
                            <StyledComponent
                              color="white"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "TagList__StyledTag-ipfhd9-1",
                                    "isStatic": false,
                                    "lastClassName": "kEVsZi",
                                    "rules": Array [
                                      "cursor:pointer;transition:0.3s;color:",
                                      [Function],
                                      ";&:not(:last-child):after{content:'•';color:",
                                      [Function],
                                      ";margin:",
                                      "5",
                                      "px;font-weight:",
                                      "700",
                                      ";}&:hover{color:",
                                      "#0BA986",
                                      ";}",
                                      [Function],
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "TagList__StyledTag",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "TagList__StyledTag-ipfhd9-1",
                                  "target": "div",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              hiddenTags={false}
                              onClick={[Function]}
                            >
                              <div
                                className="TagList__StyledTag-ipfhd9-1 kEVsZi"
                                color="white"
                                onClick={[Function]}
                              >
                                jest
                              </div>
                            </StyledComponent>
                          </TagList__StyledTag>
                        </div>
                      </StyledComponent>
                    </TagList__Container>
                  </TagList>
                  <CollectionHeader__ShareContainer>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "CollectionHeader__ShareContainer-sc-5lmo96-3",
                            "isStatic": false,
                            "lastClassName": "cdOoTX",
                            "rules": Array [
                              "width:100%;display:flex;@media (max-width:500px){justify-content:center;}justify-content:flex-start;",
                            ],
                          },
                          "displayName": "CollectionHeader__ShareContainer",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "CollectionHeader__ShareContainer-sc-5lmo96-3",
                          "target": "div",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="CollectionHeader__ShareContainer-sc-5lmo96-3 cdOoTX"
                      >
                        <Container
                          color="white"
                          title="test collection"
                          url="test url"
                        >
                          <ShareArticle__ReferenceContainer>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "ShareArticle__ReferenceContainer-sc-1qj1dsq-0",
                                    "isStatic": false,
                                    "lastClassName": "fjxrVu",
                                    "rules": Array [
                                      "display:flex;width:",
                                      "40",
                                      "px;",
                                    ],
                                  },
                                  "displayName": "ShareArticle__ReferenceContainer",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "ShareArticle__ReferenceContainer-sc-1qj1dsq-0",
                                  "target": "section",
                                  "toString": [Function],
                                  "usesTheme": false,
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <section
                                className="ShareArticle__ReferenceContainer-sc-1qj1dsq-0 fjxrVu"
                              >
                                <Tooltip
                                  animateFill={true}
                                  animation="shift"
                                  arrow={false}
                                  arrowSize="regular"
                                  className=""
                                  delay={0}
                                  disabled={false}
                                  distance={10}
                                  duration={375}
                                  followCursor={false}
                                  hideDelay={0}
                                  hideDuration={375}
                                  hideOnClick={true}
                                  html={
                                    <Content
                                      title="test collection"
                                      url="test url"
                                    />
                                  }
                                  inertia={false}
                                  interactive={false}
                                  interactiveBorder={2}
                                  multiple={false}
                                  offset={0}
                                  onHidden={[Function]}
                                  onHide={[Function]}
                                  onRequestClose={[Function]}
                                  onShow={[Function]}
                                  onShown={[Function]}
                                  popperOptions={Object {}}
                                  position="bottom"
                                  size="regular"
                                  sticky={false}
                                  stickyDuration={200}
                                  style={Object {}}
                                  theme="dark"
                                  touchHold={false}
                                  trigger="click"
                                  unmountHTMLWhenHide={true}
                                >
                                  <div
                                    className=""
                                    style={
                                      Object {
                                        "display": "inline",
                                      }
                                    }
                                  >
                                    <ForwardRef
                                      color="primary"
                                      cursor="pointer"
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        color="primary"
                                        cursor="pointer"
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          color="primary"
                                          cursor="pointer"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                            cursor="pointer"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                  </div>
                                </Tooltip>
                              </section>
                            </StyledComponent>
                          </ShareArticle__ReferenceContainer>
                        </Container>
                        <WithStyles(ForwardRef(Tooltip))
                          title="Unbookmark"
                        >
                          <ForwardRef(Tooltip)
                            classes={
                              Object {
                                "popper": "MuiTooltip-popper",
                                "popperInteractive": "MuiTooltip-popperInteractive",
                                "tooltip": "MuiTooltip-tooltip",
                                "tooltipPlacementBottom": "MuiTooltip-tooltipPlacementBottom",
                                "tooltipPlacementLeft": "MuiTooltip-tooltipPlacementLeft",
                                "tooltipPlacementRight": "MuiTooltip-tooltipPlacementRight",
                                "tooltipPlacementTop": "MuiTooltip-tooltipPlacementTop",
                                "touch": "MuiTooltip-touch",
                              }
                            }
                            title="Unbookmark"
                          >
                            <div
                              aria-describedby={null}
                              className=""
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                              onMouseLeave={[Function]}
                              onMouseOver={[Function]}
                              onTouchEnd={[Function]}
                              onTouchStart={[Function]}
                              title="Unbookmark"
                            >
                              <ForwardRef
                                color="primary"
                              >
                                <WithStyles(ForwardRef(SvgIcon))
                                  color="primary"
                                >
                                  <ForwardRef(SvgIcon)
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                    color="primary"
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                      focusable="false"
                                      role="presentation"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef>
                            </div>
                            <ForwardRef(Popper)
                              anchorEl={
                                <div
                                  class=""
                                  title="Unbookmark"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                                    focusable="false"
                                    role="presentation"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2z"
                                    />
                                  </svg>
                                </div>
                              }
                              className="MuiTooltip-popper"
                              id={null}
                              open={false}
                              placement="bottom"
                              transition={true}
                            />
                          </ForwardRef(Tooltip)>
                        </WithStyles(ForwardRef(Tooltip))>
                      </div>
                    </StyledComponent>
                  </CollectionHeader__ShareContainer>
                </div>
              </StyledComponent>
            </CollectionHeader__LeftSide>
            <CollectionHeader__RightSide>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "CollectionHeader__RightSide-sc-5lmo96-2",
                      "isStatic": false,
                      "lastClassName": "hOSBqU",
                      "rules": Array [
                        "display:flex;flex:1;align-items:center;justify-content:center;flex-direction:column;>:first-child{margin-bottom:",
                        [Function],
                        "px;}>:nth-child(2){margin-bottom:",
                        [Function],
                        "px;}> button:last-child{margin-top:",
                        [Function],
                        "px;}@media (min-width:500px){padding:",
                        [Function],
                        "px;}",
                      ],
                    },
                    "displayName": "CollectionHeader__RightSide",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "CollectionHeader__RightSide-sc-5lmo96-2",
                    "target": "div",
                    "toString": [Function],
                    "usesTheme": true,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="CollectionHeader__RightSide-sc-5lmo96-2 hOSBqU"
                >
                  <Container
                    pageType="CollectionPage"
                    statistics={
                      Array [
                        Object {
                          "count": 2,
                          "name": "Articles",
                        },
                        Object {
                          "count": 5,
                          "name": "Collections",
                        },
                      ]
                    }
                  >
                    <StatisticsContainer>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "StatisticsContainer-sc-18atadq-0",
                              "isStatic": false,
                              "lastClassName": "kulLJ",
                              "rules": Array [
                                "display:flex;flex-direction:row;>:not(:first-child){margin-left:",
                                [Function],
                                "px;}",
                              ],
                            },
                            "displayName": "StatisticsContainer",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "StatisticsContainer-sc-18atadq-0",
                            "target": "section",
                            "toString": [Function],
                            "usesTheme": true,
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <section
                          className="StatisticsContainer-sc-18atadq-0 kulLJ"
                        >
                          <Container
                            count={2}
                            key="Articles"
                            name="Articles"
                            pageType="CollectionPage"
                          >
                            <StatisticCount__SectionContainer
                              key="Articles"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "StatisticCount__SectionContainer-sc-1xyux9h-1",
                                      "isStatic": false,
                                      "lastClassName": "hBrKEM",
                                      "rules": Array [
                                        "display:flex;flex-direction:column;align-items:center;max-width:150px;",
                                      ],
                                    },
                                    "displayName": "StatisticCount__SectionContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "StatisticCount__SectionContainer-sc-1xyux9h-1",
                                    "target": "section",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <section
                                  className="StatisticCount__SectionContainer-sc-1xyux9h-1 hBrKEM"
                                >
                                  <StatisticCount__Count
                                    pageType="CollectionPage"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StatisticCount__Count-sc-1xyux9h-0",
                                            "isStatic": false,
                                            "lastClassName": "hyOXiO",
                                            "rules": Array [
                                              "color:white;font-size:",
                                              [Function],
                                              "px;font-weight:",
                                              [Function],
                                              ";margin:0px;margin-bottom:",
                                              [Function],
                                              "px;opacity:",
                                              [Function],
                                              ";",
                                            ],
                                          },
                                          "displayName": "StatisticCount__Count",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StatisticCount__Count-sc-1xyux9h-0",
                                          "target": "h3",
                                          "toString": [Function],
                                          "usesTheme": true,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      pageType="CollectionPage"
                                    >
                                      <h3
                                        className="StatisticCount__Count-sc-1xyux9h-0 hyOXiO"
                                      >
                                        2
                                      </h3>
                                    </StyledComponent>
                                  </StatisticCount__Count>
                                  <StatisticCount__Name
                                    pageType="CollectionPage"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StatisticCount__Name-sc-1xyux9h-2",
                                            "isStatic": false,
                                            "lastClassName": "glOdbU",
                                            "rules": Array [
                                              "color:white;font-size:",
                                              [Function],
                                              "px;font-weight:",
                                              [Function],
                                              ";opacity:",
                                              [Function],
                                              ";text-transform:uppercase;",
                                            ],
                                          },
                                          "displayName": "StatisticCount__Name",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StatisticCount__Name-sc-1xyux9h-2",
                                          "target": "span",
                                          "toString": [Function],
                                          "usesTheme": true,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      pageType="CollectionPage"
                                    >
                                      <span
                                        className="StatisticCount__Name-sc-1xyux9h-2 glOdbU"
                                      >
                                        Articles
                                      </span>
                                    </StyledComponent>
                                  </StatisticCount__Name>
                                </section>
                              </StyledComponent>
                            </StatisticCount__SectionContainer>
                          </Container>
                          <Container
                            count={5}
                            key="Collections"
                            name="Collections"
                            pageType="CollectionPage"
                          >
                            <StatisticCount__SectionContainer
                              key="Collections"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "StatisticCount__SectionContainer-sc-1xyux9h-1",
                                      "isStatic": false,
                                      "lastClassName": "hBrKEM",
                                      "rules": Array [
                                        "display:flex;flex-direction:column;align-items:center;max-width:150px;",
                                      ],
                                    },
                                    "displayName": "StatisticCount__SectionContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "StatisticCount__SectionContainer-sc-1xyux9h-1",
                                    "target": "section",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <section
                                  className="StatisticCount__SectionContainer-sc-1xyux9h-1 hBrKEM"
                                >
                                  <StatisticCount__Count
                                    pageType="CollectionPage"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StatisticCount__Count-sc-1xyux9h-0",
                                            "isStatic": false,
                                            "lastClassName": "hyOXiO",
                                            "rules": Array [
                                              "color:white;font-size:",
                                              [Function],
                                              "px;font-weight:",
                                              [Function],
                                              ";margin:0px;margin-bottom:",
                                              [Function],
                                              "px;opacity:",
                                              [Function],
                                              ";",
                                            ],
                                          },
                                          "displayName": "StatisticCount__Count",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StatisticCount__Count-sc-1xyux9h-0",
                                          "target": "h3",
                                          "toString": [Function],
                                          "usesTheme": true,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      pageType="CollectionPage"
                                    >
                                      <h3
                                        className="StatisticCount__Count-sc-1xyux9h-0 hyOXiO"
                                      >
                                        5
                                      </h3>
                                    </StyledComponent>
                                  </StatisticCount__Count>
                                  <StatisticCount__Name
                                    pageType="CollectionPage"
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "StatisticCount__Name-sc-1xyux9h-2",
                                            "isStatic": false,
                                            "lastClassName": "glOdbU",
                                            "rules": Array [
                                              "color:white;font-size:",
                                              [Function],
                                              "px;font-weight:",
                                              [Function],
                                              ";opacity:",
                                              [Function],
                                              ";text-transform:uppercase;",
                                            ],
                                          },
                                          "displayName": "StatisticCount__Name",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "StatisticCount__Name-sc-1xyux9h-2",
                                          "target": "span",
                                          "toString": [Function],
                                          "usesTheme": true,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      pageType="CollectionPage"
                                    >
                                      <span
                                        className="StatisticCount__Name-sc-1xyux9h-2 glOdbU"
                                      >
                                        Collections
                                      </span>
                                    </StyledComponent>
                                  </StatisticCount__Name>
                                </section>
                              </StyledComponent>
                            </StatisticCount__SectionContainer>
                          </Container>
                        </section>
                      </StyledComponent>
                    </StatisticsContainer>
                  </Container>
                  <WithStyles(ForwardRef(Typography))
                    color="secondary"
                    variant="button"
                  >
                    <ForwardRef(Typography)
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      color="secondary"
                      variant="button"
                    >
                      <span
                        className="MuiTypography-root MuiTypography-button MuiTypography-colorSecondary"
                      >
                        Curator
                      </span>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                  <AvatarComp
                    avatar="avatar url"
                    color="secondary"
                    id="678"
                    username="test username"
                    withName={true}
                  >
                    <Link
                      as="/test username/p"
                      href="/public-profile?username=test username"
                    >
                      <a
                        href="/test username/p"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                      >
                        <div
                          className="makeStyles-container-48"
                        >
                          <ForwardRef
                            borderRadius="2px"
                            className="makeStyles-avatar-49"
                            height={24}
                            image="avatar url"
                            width={24}
                          >
                            <InView
                              rootMargin="200px 0px"
                              threshold={0}
                              triggerOnce={true}
                            >
                              <Image__Img
                                borderRadius="2px"
                                className="makeStyles-avatar-49"
                                height={24}
                                image="avatar url"
                                inView={false}
                                width={24}
                              >
                                <StyledComponent
                                  borderRadius="2px"
                                  className="makeStyles-avatar-49"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Image__Img-sc-1jpuda7-0",
                                        "isStatic": false,
                                        "lastClassName": "fFzdZc",
                                        "rules": Array [
                                          "height:",
                                          [Function],
                                          ";width:",
                                          [Function],
                                          ";",
                                          [Function],
                                          ";background:",
                                          [Function],
                                          ";background-size:cover;opacity:",
                                          [Function],
                                          ";transition:opacity ",
                                          [Function],
                                          "s;",
                                          [Function],
                                          ";",
                                          [Function],
                                          ";position:",
                                          [Function],
                                          ";",
                                          [Function],
                                          ";",
                                          [Function],
                                          ";",
                                          [Function],
                                          " ",
                                          [Function],
                                          ";",
                                        ],
                                      },
                                      "displayName": "Image__Img",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Image__Img-sc-1jpuda7-0",
                                      "target": "div",
                                      "toString": [Function],
                                      "usesTheme": true,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  height={24}
                                  image="avatar url"
                                  inView={false}
                                  width={24}
                                >
                                  <div
                                    className="Image__Img-sc-1jpuda7-0 fFzdZc makeStyles-avatar-49"
                                    height={24}
                                    width={24}
                                  />
                                </StyledComponent>
                              </Image__Img>
                            </InView>
                          </ForwardRef>
                          <WithStyles(ForwardRef(Typography))
                            className="makeStyles-username-50"
                            color="secondary"
                            variant="subtitle2"
                          >
                            <ForwardRef(Typography)
                              className="makeStyles-username-50"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              color="secondary"
                              variant="subtitle2"
                            >
                              <h6
                                className="MuiTypography-root makeStyles-username-50 MuiTypography-subtitle2 MuiTypography-colorSecondary"
                              >
                                test username
                              </h6>
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                        </div>
                      </a>
                    </Link>
                  </AvatarComp>
                </div>
              </StyledComponent>
            </CollectionHeader__RightSide>
          </section>
        </StyledComponent>
      </CollectionHeader__CollectionHeaderSection>
    </Container>
  </ThemeProvider>
</ThemeProvider>
`;
