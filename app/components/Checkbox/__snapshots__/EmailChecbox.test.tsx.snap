// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/EmailCheckbox snapshot should match 1`] = `
<ThemeProvider
  theme={
    Object {
      "DEFAULT_CARD_WIDTH": 288,
      "MAIN_BODY_WIDTH": 1242,
      "bg": Object {
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "hoverTextColor": "#108E72",
        "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      },
      "bgPrimary": "#1E2428",
      "bgSecondary": "#1E3D3B",
      "borderTextArea": "#979797",
      "breakpoints": Array [
        "500px",
        "52em",
        "1242px",
      ],
      "colors": Object {
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "hoverTextColor": "#108E72",
        "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      },
      "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
      "disabledBackgroundColor": "#D6D6D6",
      "disabledTextColor": "#9B9B9B",
      "divider": "#EBEBEB",
      "errorRedColor": "#C03030",
      "fontSizes": Array [
        11,
        13,
        14,
        16,
        18,
        20,
        22,
        28,
        32,
      ],
      "fontWeight": Array [
        300,
        "normal",
        500,
        700,
      ],
      "hoverTextColor": "#108E72",
      "padContent": "
    max-width: 1242px;
    margin-left: auto;
    margin-right: auto;
    @media (min-width: 1242px) {
      min-width: 1242px;
    }
    @media (max-width: 1242px) {
      min-width: 90%;
    }
  ",
      "padding": "calc((100vw - 1242px) / 2)",
      "paddingTop": "2.5em",
      "primary": "#0BA986",
      "primaryColor": "#0BA986",
      "primaryDark": "#11856B",
      "primaryTextColor": "#1E2428",
      "secondary": "#11856B",
      "secondaryBlue": "rgb(81, 123, 162, 1)",
      "secondaryBlueDark": "rgb(81, 118, 142, 1)",
      "secondaryColor": "#1E3D3B",
      "secondaryTextColor": "#283035",
      "space": Array [
        0,
        10,
        15,
        30,
        60,
      ],
      "tertiaryBackgroundColor": "#F7F7F7",
      "textPrimary": "#1E2428",
      "white": "#FFFFFF",
    }
  }
>
  <Component
    checked={true}
    disabled={false}
    onChange={[Function]}
  >
    <EmailCheckbox__ReferenceContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "EmailCheckbox__ReferenceContainer-yhdhs2-2",
              "isStatic": true,
              "lastClassName": "jPMtkP",
              "rules": Array [
                "display:flex;width:70px;",
              ],
            },
            "displayName": "EmailCheckbox__ReferenceContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "EmailCheckbox__ReferenceContainer-yhdhs2-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="EmailCheckbox__ReferenceContainer-yhdhs2-2 jPMtkP"
        >
          <Tooltip
            animateFill={true}
            animation="shift"
            arrow={false}
            arrowSize="regular"
            className=""
            delay={0}
            disabled={false}
            distance={10}
            duration={375}
            followCursor={false}
            hideDelay={0}
            hideDuration={375}
            hideOnClick={true}
            html={<Content />}
            inertia={false}
            interactive={false}
            interactiveBorder={2}
            multiple={false}
            offset={0}
            onHidden={[Function]}
            onHide={[Function]}
            onRequestClose={[Function]}
            onShow={[Function]}
            onShown={[Function]}
            popperOptions={Object {}}
            position="top"
            size="regular"
            sticky={false}
            stickyDuration={200}
            style={Object {}}
            theme="dark"
            touchHold={false}
            trigger="mouseenter"
            unmountHTMLWhenHide={true}
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline",
                }
              }
            >
              <Component
                checked={true}
                disabled={false}
                label="newsletter"
                onChange={[Function]}
              >
                <Checkbox__Styled
                  disabled={false}
                  onClick={[Function]}
                >
                  <StyledComponent
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Checkbox__Styled-nz5nsn-0",
                          "isStatic": false,
                          "lastClassName": "kuIXZW",
                          "rules": Array [
                            "display:flex;cursor:",
                            [Function],
                            ";> input{opacity:0;}> input + label{position:relative;padding-left:25px;cursor:",
                            [Function],
                            ";color:white;text-transform:uppercase;font-size:11px;font-weight:700;&:before{content:'';position:absolute;left:0;top:0;width:17px;height:17px;border:1px solid ",
                            [Function],
                            ";background:transparent;border-radius:4px;}&:after{content:url('/static/images/checked.svg');position:absolute;top:-4px;left:4px;font-size:16px;color:white;transition:all 0.2s;}}> input:not(:checked) + label{&:after{opacity:0;transform:scale(0);}}> input:disabled:not(:checked) + label{&:before{background-color:transparent;}}> input:disabled:checked + label{&:after{opacity:0.3;}}> input:disabled + label{opacity:0.3;}> input:checked + label{&:after{opacity:1;transform:scale(1);}}> input:checked:focus + label,input:not(:checked):focus + label{&:before{border:1px dotted blue;border-radius:4px;}}",
                          ],
                        },
                        "displayName": "Checkbox__Styled",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Checkbox__Styled-nz5nsn-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <div
                      className="Checkbox__Styled-nz5nsn-0 kuIXZW"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <input
                        defaultChecked={true}
                        disabled={false}
                        type="checkbox"
                      />
                      <label>
                        newsletter
                      </label>
                    </div>
                  </StyledComponent>
                </Checkbox__Styled>
              </Component>
            </div>
          </Tooltip>
        </div>
      </StyledComponent>
    </EmailCheckbox__ReferenceContainer>
  </Component>
</ThemeProvider>
`;
