// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/NewsletterBanner should match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "DEFAULT_CARD_WIDTH": 288,
        "MAIN_BODY_WIDTH": 1242,
        "bg": Object {
          "bgPrimary": "#1E2428",
          "bgSecondary": "#1E3D3B",
          "borderTextArea": "#979797",
          "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
          "disabledBackgroundColor": "#D6D6D6",
          "disabledTextColor": "#9B9B9B",
          "divider": "#EBEBEB",
          "errorRedColor": "#C03030",
          "hoverTextColor": "#108E72",
          "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
          "paddingTop": "2.5em",
          "primary": "#0BA986",
          "primaryColor": "#0BA986",
          "primaryDark": "#11856B",
          "primaryTextColor": "#1E2428",
          "secondary": "#11856B",
          "secondaryBlue": "rgb(81, 123, 162, 1)",
          "secondaryBlueDark": "rgb(81, 118, 142, 1)",
          "secondaryColor": "#1E3D3B",
          "secondaryTextColor": "#283035",
          "tertiaryBackgroundColor": "#F7F7F7",
          "textPrimary": "#1E2428",
          "white": "#FFFFFF",
        },
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "breakpoints": Array [
          "500px",
          "52em",
          "1242px",
        ],
        "colors": Object {
          "bgPrimary": "#1E2428",
          "bgSecondary": "#1E3D3B",
          "borderTextArea": "#979797",
          "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
          "disabledBackgroundColor": "#D6D6D6",
          "disabledTextColor": "#9B9B9B",
          "divider": "#EBEBEB",
          "errorRedColor": "#C03030",
          "hoverTextColor": "#108E72",
          "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
          "paddingTop": "2.5em",
          "primary": "#0BA986",
          "primaryColor": "#0BA986",
          "primaryDark": "#11856B",
          "primaryTextColor": "#1E2428",
          "secondary": "#11856B",
          "secondaryBlue": "rgb(81, 123, 162, 1)",
          "secondaryBlueDark": "rgb(81, 118, 142, 1)",
          "secondaryColor": "#1E3D3B",
          "secondaryTextColor": "#283035",
          "tertiaryBackgroundColor": "#F7F7F7",
          "textPrimary": "#1E2428",
          "white": "#FFFFFF",
        },
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "fontSizes": Array [
          11,
          13,
          14,
          16,
          18,
          20,
          22,
          28,
          32,
        ],
        "fontWeight": Array [
          300,
          "normal",
          500,
          700,
        ],
        "hoverTextColor": "#108E72",
        "padContent": "
    max-width: 1242px;
    margin-left: auto;
    margin-right: auto;
    @media (min-width: 1242px) {
      min-width: 1242px;
    }
    @media (max-width: 1242px) {
      min-width: 90%;
    }
  ",
        "padding": "calc((100vw - 1242px) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "space": Array [
          0,
          10,
          15,
          30,
          60,
        ],
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      }
    }
  >
    <NewsletterBanner
      handleError={[MockFunction]}
      handleSubmit={[MockFunction]}
    >
      <NewsletterBanner__Container>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "NewsletterBanner__Container-sc-1kyqtrr-0",
                "isStatic": false,
                "lastClassName": "iWaUWO",
                "rules": Array [
                  "display:flex;width:100%;justify-content:center;align-items:center;padding:",
                  [Function],
                  "px;background:",
                  [Function],
                  ";",
                ],
              },
              "displayName": "NewsletterBanner__Container",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "NewsletterBanner__Container-sc-1kyqtrr-0",
              "target": "section",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <section
            className="NewsletterBanner__Container-sc-1kyqtrr-0 iWaUWO"
          >
            <NewsletterBanner__Content>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "NewsletterBanner__Content-sc-1kyqtrr-1",
                      "isStatic": false,
                      "lastClassName": "isoakR",
                      "rules": Array [
                        "display:flex;width:500px;flex-direction:column;justify-content:center;align-items:center;>:not(:last-child){margin-bottom:",
                        [Function],
                        "px;}>:nth-child(2){margin-bottom:",
                        [Function],
                        "px;}",
                      ],
                    },
                    "displayName": "NewsletterBanner__Content",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "NewsletterBanner__Content-sc-1kyqtrr-1",
                    "target": "section",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <section
                  className="NewsletterBanner__Content-sc-1kyqtrr-1 isoakR"
                >
                  <Icon>
                    <svg
                      fill="none"
                      height="52"
                      viewBox="0 0 64 52"
                      width="64"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M8 2H56C59.3 2 62 4.7 62 8V44C62 47.3 59.3 50 56 50H8C4.7 50 2 47.3 2 44V8C2 4.7 4.7 2 8 2Z"
                        stroke="#0BA986"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="4"
                      />
                      <path
                        d="M62 8L32 29L2 8"
                        stroke="#0BA986"
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="4"
                      />
                    </svg>
                  </Icon>
                  <Typography__styledComponent
                    color="white"
                  >
                    <StyledComponent
                      color="white"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Typography__styledComponent-sc-36xkf6-5",
                            "isStatic": false,
                            "lastClassName": "jNVtUZ",
                            "rules": Array [
                              "color:",
                              [Function],
                              ";margin:0px;font-weight:",
                              "500",
                              ";",
                              ";font-size:",
                              "20",
                              "px;text-transform:",
                              [Function],
                              ";text-align:",
                              [Function],
                              ";:hover{color:",
                              [Function],
                              ";cursor:",
                              [Function],
                              ";}",
                            ],
                          },
                          "displayName": "Typography__styledComponent",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Typography__styledComponent-sc-36xkf6-5",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <span
                        className="Typography__styledComponent-sc-36xkf6-5 jNVtUZ"
                        color="white"
                      >
                        Kauri Newsletter
                      </span>
                    </StyledComponent>
                  </Typography__styledComponent>
                  <Typography__component
                    color="white"
                    textAlign="center"
                  >
                    <StyledComponent
                      color="white"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Typography__component-sc-36xkf6-4",
                            "isStatic": false,
                            "lastClassName": "chprKh",
                            "rules": Array [
                              "font-size:14px;font-weight:normal;letter-spacing:-0.1px;margin-bottom:",
                              [Function],
                              "px;line-height:18px;color:",
                              [Function],
                              ";",
                              ";",
                              [Function],
                              ";",
                            ],
                          },
                          "displayName": "Typography__component",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Typography__component-sc-36xkf6-4",
                          "target": "span",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      textAlign="center"
                    >
                      <span
                        className="Typography__component-sc-36xkf6-4 chprKh"
                        color="white"
                      >
                        Subscribe below and receive the latest Ethereum tutorials and project announcements every 2 weeks!
                      </span>
                    </StyledComponent>
                  </Typography__component>
                  <WithStyles(ForwardRef(TextField))
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    placeholder="Enter your email address"
                  >
                    <ForwardRef(TextField)
                      classes={
                        Object {
                          "root": "MuiTextField-root",
                        }
                      }
                      onChange={[Function]}
                      onKeyPress={[Function]}
                      placeholder="Enter your email address"
                    >
                      <WithStyles(ForwardRef(FormControl))
                        className="MuiTextField-root"
                        onKeyPress={[Function]}
                        required={false}
                        variant="standard"
                      >
                        <ForwardRef(FormControl)
                          className="MuiTextField-root"
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth",
                              "marginDense": "MuiFormControl-marginDense",
                              "marginNormal": "MuiFormControl-marginNormal",
                              "root": "MuiFormControl-root",
                            }
                          }
                          onKeyPress={[Function]}
                          required={false}
                          variant="standard"
                        >
                          <div
                            className="MuiFormControl-root MuiTextField-root"
                            onKeyPress={[Function]}
                          >
                            <WithStyles(ForwardRef(Input))
                              onChange={[Function]}
                              placeholder="Enter your email address"
                            >
                              <ForwardRef(Input)
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "error": "Mui-error",
                                    "focused": "Mui-focused",
                                    "formControl": "MuiInput-formControl",
                                    "fullWidth": "MuiInput-fullWidth",
                                    "input": "MuiInput-input",
                                    "inputMarginDense": "MuiInput-inputMarginDense",
                                    "inputMultiline": "MuiInput-inputMultiline",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch",
                                    "multiline": "MuiInput-multiline",
                                    "root": "MuiInput-root",
                                    "underline": "MuiInput-underline",
                                  }
                                }
                                onChange={[Function]}
                                placeholder="Enter your email address"
                              >
                                <WithStyles(ForwardRef(InputBase))
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "error": "Mui-error",
                                      "focused": "Mui-focused",
                                      "formControl": "MuiInput-formControl",
                                      "fullWidth": "MuiInput-fullWidth",
                                      "input": "MuiInput-input",
                                      "inputMarginDense": "MuiInput-inputMarginDense",
                                      "inputMultiline": "MuiInput-inputMultiline",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch",
                                      "multiline": "MuiInput-multiline",
                                      "root": "MuiInput-root MuiInput-underline",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={false}
                                  inputComponent="input"
                                  multiline={false}
                                  onChange={[Function]}
                                  placeholder="Enter your email address"
                                  type="text"
                                >
                                  <ForwardRef(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "disabled": "Mui-disabled Mui-disabled",
                                        "error": "Mui-error Mui-error",
                                        "focused": "Mui-focused Mui-focused",
                                        "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                        "input": "MuiInputBase-input MuiInput-input",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                        "inputSelect": "MuiInputBase-inputSelect",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                        "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                      }
                                    }
                                    fullWidth={false}
                                    inputComponent="input"
                                    multiline={false}
                                    onChange={[Function]}
                                    placeholder="Enter your email address"
                                    type="text"
                                  >
                                    <div
                                      className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-invalid={false}
                                        className="MuiInputBase-input MuiInput-input"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder="Enter your email address"
                                        required={false}
                                        type="text"
                                      />
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </ForwardRef(Input)>
                            </WithStyles(ForwardRef(Input))>
                          </div>
                        </ForwardRef(FormControl)>
                      </WithStyles(ForwardRef(FormControl))>
                    </ForwardRef(TextField)>
                  </WithStyles(ForwardRef(TextField))>
                  <WithStyles(ForwardRef(Button))
                    color="primary"
                    onClick={[Function]}
                    variant="contained"
                  >
                    <ForwardRef(Button)
                      classes={
                        Object {
                          "colorInherit": "MuiButton-colorInherit",
                          "contained": "MuiButton-contained",
                          "containedPrimary": "MuiButton-containedPrimary",
                          "containedSecondary": "MuiButton-containedSecondary",
                          "disabled": "Mui-disabled",
                          "focusVisible": "Mui-focusVisible",
                          "fullWidth": "MuiButton-fullWidth",
                          "label": "MuiButton-label",
                          "outlined": "MuiButton-outlined",
                          "outlinedPrimary": "MuiButton-outlinedPrimary",
                          "outlinedSecondary": "MuiButton-outlinedSecondary",
                          "root": "MuiButton-root",
                          "sizeLarge": "MuiButton-sizeLarge",
                          "sizeSmall": "MuiButton-sizeSmall",
                          "text": "MuiButton-text",
                          "textPrimary": "MuiButton-textPrimary",
                          "textSecondary": "MuiButton-textSecondary",
                        }
                      }
                      color="primary"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <WithStyles(ForwardRef(ButtonBase))
                        className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                        component="button"
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="Mui-focusVisible"
                        onClick={[Function]}
                        type="button"
                      >
                        <ForwardRef(ButtonBase)
                          className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "focusVisible": "Mui-focusVisible",
                              "root": "MuiButtonBase-root",
                            }
                          }
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <button
                            className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            disabled={false}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onDragLeave={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                            type="button"
                          >
                            <span
                              className="MuiButton-label"
                            >
                              Subscribe
                            </span>
                            <NoSsr>
                              <WithStyles(undefined)
                                center={false}
                              >
                                <ForwardRef(TouchRipple)
                                  center={false}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(undefined)>
                            </NoSsr>
                          </button>
                        </ForwardRef(ButtonBase)>
                      </WithStyles(ForwardRef(ButtonBase))>
                    </ForwardRef(Button)>
                  </WithStyles(ForwardRef(Button))>
                </section>
              </StyledComponent>
            </NewsletterBanner__Content>
          </section>
        </StyledComponent>
      </NewsletterBanner__Container>
    </NewsletterBanner>
  </ThemeProvider>
</Provider>
`;
