// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/FeaturedResource should match snapshot 1`] = `
<ThemeProvider
  theme={
    Object {
      "DEFAULT_CARD_WIDTH": 288,
      "MAIN_BODY_WIDTH": 1242,
      "bg": Object {
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "hoverTextColor": "#108E72",
        "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      },
      "bgPrimary": "#1E2428",
      "bgSecondary": "#1E3D3B",
      "borderTextArea": "#979797",
      "breakpoints": Array [
        "500px",
        "52em",
        "1242px",
      ],
      "colors": Object {
        "bgPrimary": "#1E2428",
        "bgSecondary": "#1E3D3B",
        "borderTextArea": "#979797",
        "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
        "disabledBackgroundColor": "#D6D6D6",
        "disabledTextColor": "#9B9B9B",
        "divider": "#EBEBEB",
        "errorRedColor": "#C03030",
        "hoverTextColor": "#108E72",
        "padding": "calc((100vw - \${props => props.theme.breakpoints[2]}) / 2)",
        "paddingTop": "2.5em",
        "primary": "#0BA986",
        "primaryColor": "#0BA986",
        "primaryDark": "#11856B",
        "primaryTextColor": "#1E2428",
        "secondary": "#11856B",
        "secondaryBlue": "rgb(81, 123, 162, 1)",
        "secondaryBlueDark": "rgb(81, 118, 142, 1)",
        "secondaryColor": "#1E3D3B",
        "secondaryTextColor": "#283035",
        "tertiaryBackgroundColor": "#F7F7F7",
        "textPrimary": "#1E2428",
        "white": "#FFFFFF",
      },
      "contentBorder": "1px solid rgba(30, 36, 40, 0.19)",
      "disabledBackgroundColor": "#D6D6D6",
      "disabledTextColor": "#9B9B9B",
      "divider": "#EBEBEB",
      "errorRedColor": "#C03030",
      "fontSizes": Array [
        11,
        13,
        14,
        16,
        18,
        20,
        22,
        28,
        32,
      ],
      "fontWeight": Array [
        300,
        "normal",
        500,
        700,
      ],
      "hoverTextColor": "#108E72",
      "padContent": "
    max-width: 1242px;
    margin-left: auto;
    margin-right: auto;
    @media (min-width: 1242px) {
      min-width: 1242px;
    }
    @media (max-width: 1242px) {
      min-width: 90%;
    }
  ",
      "padding": "calc((100vw - 1242px) / 2)",
      "paddingTop": "2.5em",
      "primary": "#0BA986",
      "primaryColor": "#0BA986",
      "primaryDark": "#11856B",
      "primaryTextColor": "#1E2428",
      "secondary": "#11856B",
      "secondaryBlue": "rgb(81, 123, 162, 1)",
      "secondaryBlueDark": "rgb(81, 118, 142, 1)",
      "secondaryColor": "#1E3D3B",
      "secondaryTextColor": "#283035",
      "space": Array [
        0,
        10,
        15,
        30,
        60,
      ],
      "tertiaryBackgroundColor": "#F7F7F7",
      "textPrimary": "#1E2428",
      "white": "#FFFFFF",
    }
  }
>
  <FeaturedResource
    avatar="avatar url"
    description="test description"
    id="11"
    linkComponent={[MockFunction]}
    ownerResourceType="COMMUNITY"
    resourceType="ARTICLE"
    tags={
      Array [
        "test",
      ]
    }
    title="Test Title"
    version={null}
  >
    <FeaturedResource__FeaturedResourceContainer>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "FeaturedResource__FeaturedResourceContainer-sc-4xfnje-3",
              "isStatic": false,
              "lastClassName": "hGKkgc",
              "rules": Array [
                "display:flex;width:100%;background:white;flex-direction:column;padding:",
                [Function],
                "px 0px;background:white;@media (max-width:",
                [Function],
                "){padding:",
                [Function],
                "px ",
                [Function],
                "px;",
                ".FeaturedResource__ViewContainer-sc-4xfnje-2",
                "{align-items:flex-start;}}",
              ],
            },
            "displayName": "FeaturedResource__FeaturedResourceContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "FeaturedResource__FeaturedResourceContainer-sc-4xfnje-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="FeaturedResource__FeaturedResourceContainer-sc-4xfnje-3 hGKkgc"
        >
          <FeaturedResource__ContentSection>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "FeaturedResource__ContentSection-sc-4xfnje-0",
                    "isStatic": false,
                    "lastClassName": "gCNcvx",
                    "rules": Array [
                      "display:flex;@media (max-width:",
                      [Function],
                      "){flex-direction:column;>:first-child{margin-bottom:",
                      [Function],
                      "px;}}",
                      [Function],
                      ";",
                    ],
                  },
                  "displayName": "FeaturedResource__ContentSection",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "FeaturedResource__ContentSection-sc-4xfnje-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="FeaturedResource__ContentSection-sc-4xfnje-0 gCNcvx"
              >
                <FeaturedResource__ResourceDetailsContainer>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "FeaturedResource__ResourceDetailsContainer-sc-4xfnje-1",
                          "isStatic": false,
                          "lastClassName": "ffAtLy",
                          "rules": Array [
                            "display:flex;flex-direction:column;flex:3;>:not(:last-child){margin-bottom:",
                            [Function],
                            "px;}",
                          ],
                        },
                        "displayName": "FeaturedResource__ResourceDetailsContainer",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "FeaturedResource__ResourceDetailsContainer-sc-4xfnje-1",
                        "target": "section",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <section
                      className="FeaturedResource__ResourceDetailsContainer-sc-4xfnje-1 ffAtLy"
                    >
                      <Typography__component>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Typography__component-sc-36xkf6-0",
                                "isStatic": false,
                                "lastClassName": "kALGmD",
                                "rules": Array [
                                  "font-size:11px;font-weight:bold;text-transform:uppercase;color:",
                                  [Function],
                                  ";text-align:",
                                  [Function],
                                  ";",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "Typography__component",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Typography__component-sc-36xkf6-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <span
                            className="Typography__component-sc-36xkf6-0 kALGmD"
                          >
                            Featured
                          </span>
                        </StyledComponent>
                      </Typography__component>
                      <Link
                        href="/community/11"
                        prefetch={true}
                      >
                        <a
                          href="/community/11"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                        >
                          <Typography__styledComponent>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Typography__styledComponent-sc-36xkf6-5",
                                    "isStatic": false,
                                    "lastClassName": "eLGQne",
                                    "rules": Array [
                                      "color:",
                                      [Function],
                                      ";margin:0px;font-weight:",
                                      "500",
                                      ";",
                                      ";font-size:",
                                      "20",
                                      "px;text-transform:",
                                      [Function],
                                      ";text-align:",
                                      [Function],
                                      ";:hover{color:",
                                      [Function],
                                      ";cursor:",
                                      [Function],
                                      ";}",
                                    ],
                                  },
                                  "displayName": "Typography__styledComponent",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Typography__styledComponent-sc-36xkf6-5",
                                  "target": "span",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <span
                                className="Typography__styledComponent-sc-36xkf6-5 eLGQne"
                              >
                                Test Title
                              </span>
                            </StyledComponent>
                          </Typography__styledComponent>
                          <Typography__component>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Typography__component-sc-36xkf6-4",
                                    "isStatic": false,
                                    "lastClassName": "kdkRvh",
                                    "rules": Array [
                                      "font-size:14px;font-weight:normal;letter-spacing:-0.1px;margin-bottom:",
                                      [Function],
                                      "px;line-height:18px;color:",
                                      [Function],
                                      ";",
                                      ";",
                                      [Function],
                                      ";",
                                    ],
                                  },
                                  "displayName": "Typography__component",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Typography__component-sc-36xkf6-4",
                                  "target": "span",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <span
                                className="Typography__component-sc-36xkf6-4 kdkRvh"
                              >
                                test description
                              </span>
                            </StyledComponent>
                          </Typography__component>
                        </a>
                      </Link>
                      <TagList
                        color="textPrimary"
                        maxTags={3}
                        tags={
                          Array [
                            "test",
                          ]
                        }
                      >
                        <TagList__Container>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "TagList__Container-ipfhd9-0",
                                  "isStatic": false,
                                  "lastClassName": "ihYPdv",
                                  "rules": Array [
                                    "display:flex;margin:",
                                    "10",
                                    "px 0 0 0;flex-direction:",
                                    [Function],
                                    ";flex-wrap:wrap;justify-content:",
                                    [Function],
                                    ";",
                                  ],
                                },
                                "displayName": "TagList__Container",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "TagList__Container-ipfhd9-0",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="TagList__Container-ipfhd9-0 ihYPdv"
                            >
                              <TagList__StyledTag
                                color="textPrimary"
                                hiddenTags={false}
                                key="0"
                                onClick={[Function]}
                              >
                                <StyledComponent
                                  color="textPrimary"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "TagList__StyledTag-ipfhd9-1",
                                        "isStatic": false,
                                        "lastClassName": "eGuhSG",
                                        "rules": Array [
                                          "cursor:pointer;transition:0.3s;&:not(:last-child):after{content:'•';color:",
                                          "#0BA986",
                                          ";margin:",
                                          "5",
                                          "px;font-weight:",
                                          "700",
                                          ";}&:hover{color:",
                                          "#0BA986",
                                          ";}",
                                          [Function],
                                          ";",
                                          [Function],
                                          ";",
                                        ],
                                      },
                                      "displayName": "TagList__StyledTag",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "TagList__StyledTag-ipfhd9-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  hiddenTags={false}
                                  onClick={[Function]}
                                >
                                  <div
                                    className="TagList__StyledTag-ipfhd9-1 eGuhSG"
                                    color="textPrimary"
                                    onClick={[Function]}
                                  >
                                    test
                                  </div>
                                </StyledComponent>
                              </TagList__StyledTag>
                            </div>
                          </StyledComponent>
                        </TagList__Container>
                      </TagList>
                      <Link
                        href="/community/undefined"
                        prefetch={true}
                      >
                        <a
                          href="/community/undefined"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                        >
                          <UserAvatarComponent
                            avatar="avatar url"
                          >
                            <UserAvatar__Container
                              color="textPrimary"
                              fullWidth={false}
                            >
                              <StyledComponent
                                color="textPrimary"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "UserAvatar__Container-plfgvx-0",
                                      "isStatic": false,
                                      "lastClassName": "SjTka",
                                      "rules": Array [
                                        "display:flex;align-items:center;width:",
                                        [Function],
                                        ";>:first-child{margin-right:",
                                        [Function],
                                        "px;}>:nth-child(2){white-space:pre;overflow:hidden;text-overflow:ellipsis;max-width:",
                                        [Function],
                                        ";color:",
                                        [Function],
                                        ";}",
                                      ],
                                    },
                                    "displayName": "UserAvatar__Container",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "UserAvatar__Container-plfgvx-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                fullWidth={false}
                              >
                                <div
                                  className="UserAvatar__Container-plfgvx-0 SjTka"
                                  color="textPrimary"
                                >
                                  <UserAvatar__Avatar
                                    avatar="avatar url"
                                    color="white"
                                    height={30}
                                    width={30}
                                  >
                                    <StyledComponent
                                      avatar="avatar url"
                                      color="white"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "UserAvatar__Avatar-plfgvx-1",
                                            "isStatic": false,
                                            "lastClassName": "kMwImw",
                                            "rules": Array [
                                              "display:flex;height:",
                                              [Function],
                                              ";width:",
                                              [Function],
                                              ";justify-content:center;align-items:center;border-radius:",
                                              [Function],
                                              ";background:",
                                              [Function],
                                              ";> *{color:",
                                              [Function],
                                              ";text-transform:uppercase;line-height:10px;}",
                                            ],
                                          },
                                          "displayName": "UserAvatar__Avatar",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "UserAvatar__Avatar-plfgvx-1",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      height={30}
                                      width={30}
                                    >
                                      <div
                                        className="UserAvatar__Avatar-plfgvx-1 kMwImw"
                                        color="white"
                                        height={30}
                                        width={30}
                                      >
                                        <Image
                                          borderRadius="4px"
                                          height={30}
                                          image="avatar url"
                                          width={30}
                                        >
                                          <InView
                                            rootMargin="200px 0px"
                                            threshold={0}
                                            triggerOnce={true}
                                          >
                                            <Image__Img
                                              borderRadius="4px"
                                              height={30}
                                              image="avatar url"
                                              inView={false}
                                              width={30}
                                            >
                                              <StyledComponent
                                                borderRadius="4px"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Image__Img-sc-1jpuda7-0",
                                                      "isStatic": false,
                                                      "lastClassName": "jAWVlp",
                                                      "rules": Array [
                                                        "height:",
                                                        [Function],
                                                        ";width:",
                                                        [Function],
                                                        ";",
                                                        [Function],
                                                        ";background:",
                                                        [Function],
                                                        ";background-size:cover;opacity:",
                                                        [Function],
                                                        ";transition:opacity ",
                                                        [Function],
                                                        "s;",
                                                        [Function],
                                                        ";",
                                                        [Function],
                                                        ";position:",
                                                        [Function],
                                                        ";",
                                                        [Function],
                                                        ";",
                                                        [Function],
                                                        ";",
                                                        [Function],
                                                        " ",
                                                        [Function],
                                                        ";",
                                                      ],
                                                    },
                                                    "displayName": "Image__Img",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Image__Img-sc-1jpuda7-0",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={[Function]}
                                                height={30}
                                                image="avatar url"
                                                inView={false}
                                                width={30}
                                              >
                                                <div
                                                  className="Image__Img-sc-1jpuda7-0 jAWVlp"
                                                  height={30}
                                                  width={30}
                                                />
                                              </StyledComponent>
                                            </Image__Img>
                                          </InView>
                                        </Image>
                                      </div>
                                    </StyledComponent>
                                  </UserAvatar__Avatar>
                                  <Typography__styledComponent>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Typography__styledComponent-sc-36xkf6-5",
                                            "isStatic": false,
                                            "lastClassName": "evZVGc",
                                            "rules": Array [
                                              "color:",
                                              [Function],
                                              ";margin:0px;font-weight:",
                                              "bold",
                                              ";",
                                              ";font-size:",
                                              "13",
                                              "px;text-transform:",
                                              [Function],
                                              ";text-align:",
                                              [Function],
                                              ";:hover{color:",
                                              [Function],
                                              ";cursor:",
                                              [Function],
                                              ";}",
                                            ],
                                          },
                                          "displayName": "Typography__styledComponent",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Typography__styledComponent-sc-36xkf6-5",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="Typography__styledComponent-sc-36xkf6-5 evZVGc"
                                      >
                                        Anonymous
                                      </span>
                                    </StyledComponent>
                                  </Typography__styledComponent>
                                </div>
                              </StyledComponent>
                            </UserAvatar__Container>
                          </UserAvatarComponent>
                        </a>
                      </Link>
                    </section>
                  </StyledComponent>
                </FeaturedResource__ResourceDetailsContainer>
                <FeaturedResource__ViewContainer>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "FeaturedResource__ViewContainer-sc-4xfnje-2",
                          "isStatic": true,
                          "lastClassName": "bQDGjh",
                          "rules": Array [
                            "display:flex;flex-direction:column;justify-content:center;align-items:center;flex:1;",
                          ],
                        },
                        "displayName": "FeaturedResource__ViewContainer",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "FeaturedResource__ViewContainer-sc-4xfnje-2",
                        "target": "section",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <section
                      className="FeaturedResource__ViewContainer-sc-4xfnje-2 bQDGjh"
                    >
                      <Link
                        href="/community/11"
                        prefetch={true}
                      >
                        <a
                          href="/community/11"
                          onClick={[Function]}
                          onMouseEnter={[Function]}
                        >
                          <WithStyles(ForwardRef(Button))
                            color="primary"
                            variant="outlined"
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                }
                              }
                              color="primary"
                              variant="outlined"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      View ARTICLE
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </a>
                      </Link>
                    </section>
                  </StyledComponent>
                </FeaturedResource__ViewContainer>
              </div>
            </StyledComponent>
          </FeaturedResource__ContentSection>
        </div>
      </StyledComponent>
    </FeaturedResource__FeaturedResourceContainer>
  </FeaturedResource>
</ThemeProvider>
`;
